{"version":3,"sources":["API.js","login/Login.js","student/NavBar.js","student/home/Statistics.js","Utils.js","student/home/Events.tsx","student/home/Home.js","shared/PostComments.tsx","student/courses/PostList.js","student/courses/FileList.js","student/courses/Assignments.js","student/courses/Attendance.js","student/courses/Grades.js","student/courses/Course.js","student/courses/Courses.js","student/settings/Profile.js","shared/Schedule.tsx","student/schedule/Schedule.tsx","student/settings/Settings.tsx","student/Student.js","teacher/NavBar.js","teacher/courses/PostList.js","teacher/courses/FileList.js","teacher/courses/Assignments.js","teacher/courses/Attendance.js","teacher/courses/AttendanceSession.js","teacher/courses/AddSession.js","teacher/courses/Grades.js","teacher/courses/AddGrades.js","teacher/courses/UpdateGrades.tsx","teacher/courses/Register.tsx","teacher/courses/Course.js","teacher/courses/Courses.js","teacher/Class.js","teacher/home/Events.tsx","teacher/home/Home.js","teacher/home/Profile.js","teacher/schedule/Schedule.tsx","teacher/Teacher.js","App.js","index.js"],"names":["apiLink","Login","_props","history","useHistory","useState","error","setError","email","password","form","setForm","auth_student","a","url","fetch","then","res","json","status","result","authenticated","token","id","sessionStorage","setItem","push","alert","message","catch","err","console","log","auth_teacher","onChange","e","preventDefault","name","target","value","style","borderRadius","className","placeholder","type","onClick","NavBar","studentId","useContext","StudentContext","onFocus","setFocus","match","useRouteMatch","fullName","setFullName","useEffect","bearer","getItem","headers","firstname","lastname","fetchStudent","to","event","ProfilePicture","src","calculateGradeStatistics","grades","totalGrades","length","maxGrade","minGrade","maxCourse","minCourse","forEach","grade","calculateAttendance","sessions","attended","total","session","color","Statistics","attendance","setAttendance","gradeStatistics","setGradeStatistics","newstate","_","newAttendance","fetchInfo","validateEmail","string","test","validateNameString","validatePhone","organizeSchedule","schedule_data","currDayIndex","currHourIndex","lastDayName","i","row","day_name","hours","day","start","end","course_name","course_category","courseInstanceID","organizeGrades","lastStudentId","currPosition","currGrade","comment","date","studentID","organizeStudents","studentFiles","currStudent","studentFile","files","scheduleColors","getColorForCourse","courseId","months","Event","props","Date","due","month","getMonth","getDay","border","title","classInstanceID","Events","events","setEvents","fetchEvents","map","Home","CommentsContext","React","createContext","postId","updateList","deleteCommentUrl","postCommentUrl","userId","userType","Comments","shown","setShown","comments","CommentList","Comment","imgSrc","teacherID","userComment","commented_on","method","CommentForm","setComment","onSubmit","body","JSON","stringify","autoComplete","PostItem","post","lines","split","author","posted_on","line","CommentSection","course","CourseContext","update","setUpdate","setComments","Provider","PostForm","updatePostList","updateCallback","setPost","handleChange","req_body","rows","cols","PostList","posts","setPosts","shouldUpdate","setShouldUpdate","fetchPosts","FileList","setFiles","fetchFiles","file","FileListItem","stripedFilename","filename","replace","downloadUrl","window","open","AssignmentList","assignments","setAssignments","fetchAssignments","AssignmentItem","assignment","Assignment","assignmentId","useParams","setAssignment","fetchAssignment","assignmentFiles","setAssignmentFiles","description","FileForm","classInstanceId","StudentFile","formData","FormData","encType","hidden","readOnly","Attendance","setSessions","fetchSessions","SessionRow","week","topic","CourseItem","GradeRow","Grades","setGrades","getGrades","Course","path","setCourse","fetchCourse","exact","CourseList","courses","setCourses","fetchCourses","x","CourseListItem","hoursPerWeek","setHoursPerWeek","lastGrade","setLastGrade","fetchHoursPerWeek","fetchLastGrade","backgroundColor","category","teacher","Courses","Profile","address","phone","student","setStudent","Error","affectedRows","ScheduleSettings","calculateLength","s_h","s_m","e_h","e_m","parseInt","Timeline","Day","blocks","blockStyle","width","height","last","hour","Hour","start_split","end_split","hourStyle","top","left","right","Schedule","days","index","ScheduleDataProvider","setDays","organized_days","fetchDays","ProfileInfo","age","gender","nationality","ProfilePictureForm","uploadImage","Settings","Student","teacherId","TeacherContext","fetchTeacher","modifyPost","setModifyPost","textLines","close","ModifyPost","AssignmentForm","modify","setModify","ModifyAssignment","courseInstanceId","StudentList","AssignmentFileItem","students","setStudents","fetchStudents","filesShown","setFilesShown","StudentFileItem","assignmentID","StudentRow","sessionId","incButton","decButton","Session","goBack","callback","NewSession","array","setAttendedList","setSession","attendedList","submitStudents","insertId","key","functionGenerator","delta","newArray","newValue","setHidden","elements","getCourseGrades","AddSingleGrade","step","min","max","AddGrades","studentGradeList","ModifyGrade","setGrade","location","state","DeleteGrade","setDate","Days","toString","emptyDays","mark","year","query","newDays","fetchGrades","cell","Cell","setCell","updateMark","updatedCell","popUpContainer","document","getElementById","ReactDOM","render","ModifyCell","unmountComponentAtNode","deleteMark","Register","AddSession","fetchCourseGrades","Class","setTeacher","fetchteacher","Teacher","text","swal","icon","App","StrictMode"],"mappings":"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","file":"static/js/main.6a2aa3a2.chunk.js","sourcesContent":["const apiLink = \"http://185.62.175.216:5000\";\n//const apiLink = \"http://localhost:5000\";\n\n\nexport default apiLink;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport apiLink from \"../API\";\n\nconst Login = (_props) => {\n\n\tconst history = useHistory();\n\n  const [error, setError] = useState(\"\");\n\tconst [form, setForm] = useState({\n\t\temail: \"\",\n\t\tpassword: \"\"\n\t});\n\n\tconst auth_student = async () => {\n\t\tconst email = form.email;\n\t\tconst password = form.password;\n\t\tconst url = `${apiLink}/auth/auth_student?email=${email}&password=${password}`;\n\t\tawait fetch(url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tif (res.result.authenticated) {\n\t\t\t\t\t\tconst token = res.result.token;\n\t\t\t\t\t\tconst id = res.result.id;\n\t\t\t\t\t\tsessionStorage.setItem(\"jwt\", token);\n\t\t\t\t\t\thistory.push(`/s/${id}`);\n\t\t\t\t\t} else {\n            setError(\"Credentials are wrong!\");\n          }\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\tconst auth_teacher = async () => {\n\t\tconst email = form.email;\n\t\tconst password = form.password;\n\t\tconst url = `${apiLink}/auth/auth_teacher?email=${email}&password=${password}`;\n\t\tawait fetch(url)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tif (res.result.authenticated) {\n\t\t\t\t\t\tconst token = res.result.token;\n\t\t\t\t\t\tconst id = res.result.id;\n\t\t\t\t\t\tsessionStorage.setItem(\"jwt\", token);\n\t\t\t\t\t\thistory.push(`/t/${id}`);\n\t\t\t\t\t} else {\n            setError(\"Credentials are wrong!\");\n          }\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\tconst onChange = (e) => {\n\t\te.preventDefault();\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\treturn (\n\t\t<div style={{ borderRadius: \"12px\" }} className=\"Login\">\n\n\t\t\t<div className=\"right-pane\">\n\t\t\t\t<h2>Learning Management System</h2>\n\t\t\t\t<br></br>\n        <p className=\"error\">{error}</p>\n\t\t\t\t<input placeholder=\"Email...\" type=\"text\" name=\"email\" value={form.email} onChange={onChange} />\n\t\t\t\t<br></br>\n\t\t\t\t<input placeholder=\"Password...\" type=\"password\" name=\"password\" value={form.password} onChange={onChange} />\n\t\t\t\t<br></br>\n\t\t\t\t<div className=\"button-box\">\n\t\t\t\t\t<button onClick={() => auth_student()}>Login as student</button>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<button onClick={() => auth_teacher()}>Login as teacher</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useRouteMatch, useHistory } from 'react-router-dom';\nimport apiLink from '../API';\nimport { StudentContext } from './Student';\n\nexport default function NavBar() {\n  const studentId = useContext(StudentContext);\n  const [onFocus, setFocus] = useState(\"home\");\n\n  const history = useHistory();\n  let match = useRouteMatch();\n\n  const logout = (event) => {\n    event.preventDefault();\n    sessionStorage.setItem(\"jwt\", \"\");\n    history.push(\"/\");\n  }\n\n  const [fullName, setFullName] = useState(\"\");\n  useEffect(() => {\n    const fetchStudent = async () => {\n      const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n      await fetch(`${apiLink}/students/${studentId}`, {\n        headers: {\n          'Authorization': bearer\n        }\n      }).then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setFullName(res.result.firstname + \" \" + res.result.lastname);\n          } else {\n            console.log(res.message);\n          }\n        }).catch(err => console.log(err));\n    }\n    fetchStudent();\n  }, [studentId]);\n\n  return (\n    <div className=\"sidenav\">\n\n      <ProfilePicture fullName={fullName} />\n\n      <Link to={`${match.url}/home`}\n        onClick={() => setFocus(\"home\")}\n        className={onFocus === \"home\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">home</i>\n        <p>Home</p>\n      </Link>\n\n      <Link to={`${match.url}/schedule`}\n        onClick={() => setFocus(\"schedule\")}\n        className={onFocus === \"schedule\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">schedule</i>\n        <p>Schedule</p>\n      </Link>\n\n      <Link to={`${match.url}/courses`}\n        onClick={() => setFocus(\"courses\")}\n        className={onFocus === \"courses\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">description</i>\n        <p>Courses</p>\n      </Link>\n\n      <Link to={`${match.url}/settings`}\n        onClick={() => setFocus(\"settings\")}\n        className={onFocus === \"settings\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">settings</i>\n        <p>Settings</p>\n      </Link>\n\n      <Link to={`/`} onClick={logout} className=\"logout\">\n        <i className=\"material-icons\">logout</i>\n        <p>Log out</p>\n      </Link>\n    </div>\n  );\n}\n\nconst ProfilePicture = ({ fullName }) => {\n  const studentId = useContext(StudentContext);\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__picture\">\n        <img src={`${apiLink}/students/${studentId}/picture`} />\n      </div>\n      <h5>{fullName}</h5>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport apiLink from \"../../API\";\nimport { StudentContext } from \"../Student\";\n\n/* This function takes as input a list of grades taken from the api\n*  and returns an object which contains relevant statistics*/\nfunction calculateGradeStatistics(grades) {\n\tlet totalGrades = grades.length;\n\tlet maxGrade = 4;\n\tlet minGrade = 10;\n\tlet maxCourse = \"\";\n\tlet minCourse = \"\";\n\n\tgrades.forEach(grade => {\n\t\tif (grade.grade < minGrade) {\n\t\t\tminGrade = grade.grade;\n\t\t\tminCourse = grade.name;\n\t\t}\n\t\tif (grade.grade > maxGrade) {\n\t\t\tmaxGrade = grade.grade;\n\t\t\tmaxCourse = grade.name;\n\t\t}\n\t});\n\treturn { totalGrades, maxGrade, minGrade, maxCourse, minCourse };\n}\n\n/* This function takes as input a list of sessions taken from the api\n*  and returns an object which contains relevant statistics*/\nfunction calculateAttendance(sessions) {\n\tlet attended = 0;\n\tlet total = 0;\n\n\tsessions.forEach(session => {\n\t\tattended += session.attended;\n\t\ttotal += session.length;\n\t});\n\n\tlet color = '#009c0d';\n\tif (attended / total < 0.5) {\n\t\tcolor = '#c9040b';\n\t} else if (attended / total < 0.8) {\n\t\tcolor = '#d1d113';\n\t}\n\treturn { attended, total, color };\n}\n\n/* Displayes the list of the courses and the average grade */\nexport default function Statistics(_props) {\n\tconst studentId = useContext(StudentContext);\n\n\t/* The state which holds the attendance information */\n\tconst [attendance, setAttendance] = useState({\n\t\tattended: 0,\n\t\ttotal: 0,\n\t\tcolor: '#009c0d'\n\t});\n\n\t/* The state which holds the grades information */\n\tconst [gradeStatistics, setGradeStatistics] = useState({\n\t\ttotalGrades: 0,\n\t\tmaxGrade: 10,\n\t\tmaxCourse: \"\",\n\t\tminGrade: 4,\n\t\tminCourse: \"\",\n\t});\n\n\tuseEffect(() => {\n\t\tconst fetchInfo = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\n\t\t\t/* The request which retrieves a list of grades */\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/grades`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tconst newstate = calculateGradeStatistics(res.result);\n\t\t\t\t\t\tsetGradeStatistics(newstate);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\n\t\t\t/* The request which retrieves a list of attendance sesions */\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/attendance`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tconst newAttendance = calculateAttendance(res.result);\n\t\t\t\t\t\tsetAttendance(newAttendance);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchInfo();\n\t}, [studentId]);\n\n\n\treturn (\n\t\t<div className=\"statistics\">\n\t\t\t<div className=\"statistics__head\">\n\t\t\t\t<h3>Statistics</h3>\n\t\t\t</div>\n\t\t\t<div className=\"statistics__numbers\">\n\n\t\t\t\t<div className=\"statistics__numbers__grades-count\">\n\t\t\t\t\t<p><b>Total grades</b></p>\n\t\t\t\t\t<strong>{gradeStatistics.totalGrades}</strong>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"statistics__numbers__max-grade\">\n\t\t\t\t\t<p>Max grade</p>\n\t\t\t\t\t<strong>{gradeStatistics.maxGrade}</strong>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"statistics__numbers__min-grade\">\n\t\t\t\t\t<p>Min grade</p>\n\t\t\t\t\t<strong>{gradeStatistics.minGrade}</strong>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"statistics__numbers__missings\">\n\t\t\t\t\t<p><b>Attended / Total</b></p>\n\t\t\t\t\t<strong style={{ color: attendance.color }}>\n\t\t\t\t\t\t{attendance.attended} / {attendance.total}\n\t\t\t\t\t</strong>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t\t<div className=\"statistics__courses\">\n\n\t\t\t\t<div className=\"statistics__courses__max\">\n\t\t\t\t\t<p>Max. Grade</p>\n\t\t\t\t\t<strong>{gradeStatistics.maxCourse}</strong>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"statistics__courses__min\">\n\t\t\t\t\t<p>Min. Grade</p>\n\t\t\t\t\t<strong>{gradeStatistics.minCourse}</strong>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","/* Regex validation functions */\nconst validateEmail = (string) => {\n\tconst regex = /^\\S+@\\S+\\.\\S+$/;\n\treturn regex.test(string);\n};\nconst validateNameString = (string) => {\n\tconst regex = /^[a-zA-z]{0,30}$/;\n\treturn regex.test(string);\n};\nconst validatePhone = (string) => {\n\tconst regex = /^\\+?\\d{10,14}$/;\n\treturn regex.test(string);\n};\n\n/*\n * this function that organizes the schedule into day specific\n * hours, so  that they are easier to display\n*/\nconst organizeSchedule = (schedule_data) => {\n\tlet result = []; // the final result\n\t// dayIndex tells us on which day we are inserting\n\t// hourIndex tells us on which hour we are inserting\n\tlet currDayIndex = -1, currHourIndex = 0;\n\n\t// lastDayName represents the name of the last day we were adding into\n\t// we use it to determine when we need to insert hours into another day\n\tlet lastDayName = \"\";\n\n\tfor (let i = 0; i < schedule_data.length; i++) {\n\n\t\tlet row = schedule_data[i];\n\n\t\t// if the day name has changed\n\t\tif (lastDayName !== row.day_name) {\n\t\t\t// modify and increment the variables\n\t\t\tlastDayName = row.day_name;\n\t\t\tcurrDayIndex++;\n\t\t\tcurrHourIndex = 0;\n\t\t\t// initialize the day object in the correct index\n\t\t\tresult[currDayIndex] = { name: lastDayName, hours: [], day: row.day };\n\t\t}\n\n\t\tresult[currDayIndex].hours[currHourIndex] = {\n\t\t\tid: row.id,\n      start: row.start,\n      end: row.end,\n\t\t\tcourse_name: row.course_name,\n\t\t\tcourse_category: row.course_category,\n\t\t\tcourseInstanceID: row.courseInstanceID\n\t\t};\n\n\t\tcurrHourIndex++;\n\t}\n\treturn result;\n};\n\n/* this function organizes grades that come from the api into student specific\n * grades so that they are easier to display */\nconst organizeGrades = (grades) => {\n\t// the final result\n\tlet result = [];\n\t// helps us determine if the grades have changed\n\tlet lastStudentId = -1;\n\t// holds the current position in terms of student count\n\tlet currPosition = -1;\n\n\t// for each grade in the list\n\tfor (let i = 0; i < grades.length; i++) {\n\t\t// extract the current grade\n\t\tconst currGrade = grades[i];\n\t\t// get only the neccessary information\n\t\tconst grade = {\n\t\t\tid: currGrade.id,\n\t\t\tgrade: currGrade.grade,\n\t\t\tcomment: currGrade.comment,\n\t\t\tdate: currGrade.date\n\t\t};\n\t\t// if the student id has changed\n\t\tif (lastStudentId !== currGrade.studentID) {\n\t\t\t// increment the counter to point to the other student\n\t\t\tcurrPosition++;\n\t\t\tlastStudentId = currGrade.studentID;\n\t\t\t// create the other student entry\n\t\t\tresult[currPosition] = {\n\t\t\t\tid: currGrade.studentID,\n\t\t\t\tfirstname: currGrade.firstname,\n\t\t\t\tlastname: currGrade.lastname,\n\t\t\t\tgrades: []\n\t\t\t};\n\t\t}\n\t\tresult[currPosition].grades.push(grade);\n\t}\n\treturn result;\n};\n\n/* organizes the list of files received from the api \n * into a list of student objects, each containing a list of files\n * */\nconst organizeStudents = (studentFiles) => {\n\tconst result = [];/* The final result */\n\t/* Keeps track of the current student id */\n\tlet lastStudentId = -1;\n\t/* Keeps track of the current student index */\n\tlet currStudent = -1;\n\tfor (let i = 0; i < studentFiles.length; i++) {\n\t\tconst studentFile = studentFiles[i];\n\n\t\t/* If the file belongs to a new student this means that\n\t\t * we now have to create a new student object*/\n\t\tif (studentFile.studentID !== lastStudentId) {\n\t\t\tlastStudentId = studentFile.studentID;\n\t\t\tcurrStudent++;\n\t\t\tresult[currStudent] = {\n\t\t\t\tid: studentFile.studentID,\n\t\t\t\tfirstname: studentFile.firstname,\n\t\t\t\tlastname: studentFile.lastname,\n\t\t\t\tfiles: []\n\t\t\t};\n\t\t}\n\n\t\tresult[currStudent].files.push(studentFile);\n\t}\n\treturn result;\n};\n\n/* The colors used by the schedule to automatically color different courses */\nconst scheduleColors = ['#eb506f', '#7e50eb', '#50ebb2', '#50eb55', '#d9eb50'];\nconst getColorForCourse = (courseId) => {\n  const colorIndex = courseId % scheduleColors.length;\n  return scheduleColors[colorIndex];\n};\n\nexport {\n\tvalidateEmail, \n\tvalidateNameString, \n\tvalidatePhone,\n\torganizeSchedule,\n\torganizeGrades,\n\torganizeStudents,\n  getColorForCourse\n};\n","import React, { useEffect, useState, useContext } from \"react\";\nimport apiLink from \"../../API\";\nimport { StudentContext } from \"../Student\";\nimport { getColorForCourse } from '../../Utils';\n\ntype Event = {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tdue: string;\n\tclassInstanceID: number | null\n}\n\nconst months = [\n\t\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n\t\"May\", \"Jun\", \"Jul\", \"Aug\",\n\t\"Sep\", \"Oct\", \"Nov\", \"Dec\"\n];\n\n/* this component is responsible for displaying the school events */\nfunction Events(_props: any) {\n\tconst studentId = useContext(StudentContext);\n\n\t/* Fetch the events from the api */\n\tconst [events, setEvents] = useState<Event[]>([]);\n\tuseEffect(() => {\n\t\tconst fetchEvents = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/events`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetEvents(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(alert as any)(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchEvents();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"events\">\n\t\t\t<div className=\"head\">\n\t\t\t\t<h3>Upcoming Events</h3>\n\t\t\t</div>\n\t\t\t<div className=\"events__list\">\n\t\t\t\t{events.map(event => <Event key={event.id} event={event} />)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/* displays a single event */\nfunction Event(props: { event: Event }) {\n\tconst e = props.event;\n\tconst date = new Date(e.due);\n\n\t/* Get the name of the month of the date */\n\tconst month = months[date.getMonth()];\n\n\t/* Get the day and a 0 in front to make all the days contain two digits */\n\tconst day = date.getDay() < 10 ? '0' + date.getDay() : date.getDay();\n\n\t/* Get a color for the color of the border\n\t*  And then dynamically set the border color of the date */\n\tconst color = getColorForCourse(props.event.id);\n\tconst style = {\n\t\tborder: `2px solid ${color}`,\n\t\tborderRadius: '10px 0 0 10px'\n\t};\n\treturn (\n\t\t<div className=\"event\">\n\t\t\t<div style={style} className=\"event__date\">\n\t\t\t\t<p className=\"event__date__day\"><b>{day}</b></p>\n\t\t\t\t<p className=\"event__date__month\">{month}</p>\n\t\t\t</div>\n\t\t\t<div className=\"event__description\">\n\t\t\t\t<h4>{e.title}</h4>\n\t\t\t\t<p>{e.classInstanceID ? \"Class\" : \"School\"}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Events;\n","import React  from \"react\";\nimport Statistics from './Statistics';\nimport Events from './Events';\n\n/* displays the home page */\nfunction Home(_props) {\n\treturn (\n\t\t<div className=\"home\">\n\t\t\t<header>\n\t\t\t\t<h2>Home</h2>\n\t\t\t</header>\n\t\t\t<section>\n\t\t\t\t<div className=\"dashboard\">\n\t\t\t\t\t<div className=\"personal\">\n\t\t\t\t\t\t<Statistics />\n\t\t\t\t\t</div>\n\t\t\t\t\t<Events />\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nexport default Home;\n","import React, { useState, useContext } from 'react';\nimport apiLink from '../API.js';\n\n/* A comment can be a student comment or a teacher comment,\n* When it is a teacher comment 'teacherID' is a number and 'studentID' is null\n* When it is a student comment 'studentID' is a number and 'teacherID' is null\n* */\ntype Comment = {\n\tid: number;\n\tcomment: string;\n\tcommented_on: string;\n\tteacherID: number;\n\tstudentID: number;\n\tfirstname: string;\n\tlastname: string;\n\tpostID: number;\n};\n\n/* The post context */\nexport const CommentsContext = React.createContext({\n\tpostId: 0,\n\tupdateList: () => console.log(\"Comment list\"),\n\tdeleteCommentUrl: \"\",\n\tpostCommentUrl: \"\",\n\tcourseId: 0,\n\tuserId: 0,\n\tuserType: \"\"\n});\n\nexport const Comments = (props: { comments: Comment[] }) => {\n\t/* Determines whether the comment list is shown */\n\tconst [shown, setShown] = useState(false);\n\n\treturn (\n\t\t<div className=\"comment-list\">\n\t\t\t<div className=\"comment-list__count\" onClick={() => setShown(!shown)}>\n\t\t\t\t<i className=\"material-icons\">chat</i>\n\t\t\t\t<p>{`${props.comments.length} comments`}</p>\n\t\t\t</div>\n\t\t\t{shown ? <CommentList comments={props.comments} /> : null}\n\t\t\t<div className=\"comment-list__form\">\n\t\t\t\t<CommentForm />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/* Displays a list of comments */\nconst CommentList = (props: { comments: Comment[] }) => {\n\treturn (\n\t\t<div className=\"comment-list_comments\">\n\t\t\t{props.comments.map(comment => <Comment key={comment.id} comment={comment} />)}\n\t\t</div>\n\t);\n}\n\n/* Displays a single comment */\nconst Comment = (props: { comment: Comment }) => {\n\tconst { updateList, deleteCommentUrl, userId, userType } = useContext(CommentsContext);\n\n\t/* Decide on the url of the image, this depends on whether this is a user or\n\t * a teacher comment */\n\tlet imgSrc = \"\";\n\tif (props.comment.studentID) {\n\t\timgSrc = `${apiLink}/students/${props.comment.studentID}/picture`;\n\t} else {\n\t\timgSrc = `${apiLink}/teachers/${props.comment.teacherID}/picture`;\n\t}\n\n\tconst deleteComment = (event: React.MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tfetch(`${deleteCommentUrl}/${props.comment.id}`, {\n\t\t\tmethod: \"delete\",\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t}).then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t(alert as any)(\"Success!\", res.message, \"success\");\n\t\t\t\t\tupdateList();\n\t\t\t\t} else {\n\t\t\t\t\t(alert as any)(\"Error!\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\tlet userComment = false;\n\tif( userType === \"student\" && props.comment.studentID == userId ) {\n\t\tuserComment = true;\n\t} else if (userType === \"teacher\" && props.comment.teacherID == userId ) {\n\t\tuserComment = true;\n\t}\n\n\treturn (\n\t\t<div className=\"comment\">\n\t\t\t<div className=\"comment__photo\">\n\t\t\t\t<img src={imgSrc}></img>\n\t\t\t</div>\n\t\t\t<div className=\"comment__info\">\n\t\t\t\t<div className=\"comment__info__header\">\n\t\t\t\t\t<b>{props.comment.firstname + \" \" + props.comment.lastname}</b>\n\t\t\t\t\t<p>{props.comment.commented_on}</p>\n\t\t\t\t\t{userComment\n\t\t\t\t\t\t? <i className=\"material-icons\" onClick={deleteComment}>delete</i>\n\t\t\t\t\t\t: null\n\t\t\t\t\t}\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"comment__info__comment\">\n\t\t\t\t\t<p>{props.comment.comment}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/* Handles adding new comment to the post */\nconst CommentForm = () => {\n\tconst { updateList, postCommentUrl } = useContext(CommentsContext);\n\n\tconst [comment, setComment] = useState(\"\");\n\n\tconst handleChange = (event: React.ChangeEvent) => {\n\t\tevent.preventDefault();\n\t\tconst { value } = (event.target as any);\n\t\tif (value === \"\") {\n\t\t\t(alert as any)(\"Error!\", \"You cannot have empty comment\", \"error\");\n\t\t}\n\t\tsetComment(value);\n\t}\n\n\tconst onSubmit = (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\n\t\tif (comment === \"\") {\n\t\t\t(alert as any)(\"Error!\", \"Cannot have empty comment!\", \"error\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tfetch(postCommentUrl, {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer,\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify({ comment: comment })\n\t\t}).then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t(alert as any)(\"Success!\", res.message, \"success\");\n\t\t\t\t\tupdateList();\n\t\t\t\t} else {\n\t\t\t\t\t(alert as any)(\"Error!\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\treturn (\n\t\t<form onSubmit={onSubmit} autoComplete=\"off\">\n\t\t\t<input type=\"text\" name=\"comment\" placeholder=\"Add a new comment\" value={comment} onChange={handleChange} />\n\t\t\t<i className=\"material-icons\" onClick={onSubmit}>send</i>\n\t\t</form>\n\t);\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport apiLink from \"../../API\";\nimport { CourseContext } from './Course';\nimport { StudentContext } from '../Student';\nimport {CommentsContext, Comments} from \"../../shared/PostComments\";\n\nfunction PostList(props) {\n\tconst course = useContext(CourseContext);\n\tconst studentId = useContext(StudentContext);\n\tconst [posts, setPosts] = useState([]);\n\n\t/* This variable is used to determine when we should update the post list.\n\t * Typically this is done after we have added a new post. Everytime this\n\t * changes the useEffect hook will rerun.*/\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\n\tuseEffect(() => {\n\n\t\tconst fetchPosts = async () => {\n\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/posts`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetPosts(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\tfetchPosts();\n\t}, [shouldUpdate, course.id, studentId]);\n\n\treturn (\n\t\t<div className=\"post-list\">\n\t\t\t<PostForm updateCallback={() => setShouldUpdate(shouldUpdate + 1)} />\n\t\t\t{posts.map(post => <PostItem key={post.id} post={post} />)}\n\t\t</div>\n\t);\n}\n\nfunction PostItem({ post }) {\n\tconst lines = post.body.split(\"\\n\");\n\treturn (\n\t\t<div className=\"post-item\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<p><b>{post.author}</b></p>\n\t\t\t\t<p>{post.posted_on}</p>\n\t\t\t</div>\n\t\t\t<div className=\"body\">\n\t\t\t\t<p><b>{post.title}</b></p>\n\t\t\t\t{lines.map(line => <p>{line}</p>)}\n\t\t\t</div>\n      <CommentSection postId={post.id} />\n\t\t</div>\n\t);\n}\n\n\nconst CommentSection = ({postId}) => {\n\tconst studentId = useContext(StudentContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [update, setUpdate] = useState(0);\n\tconst [comments, setComments] = useState([]);\n\tuseEffect(() => {\n\t\t/* The jwt token */\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\t/* Perform a get request to the api */\n\t\tfetch(`${apiLink}/students/${studentId}/courses/${course.id}/posts/${postId}/comments`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t}).then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetComments(res.result);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [studentId, course.id, postId, update]);\n\treturn (\n\t\t\n\t\t<CommentsContext.Provider\n\t\t\tvalue={{\n\t\t\t\tpostId: postId,\n\t\t\t\tupdateList: () => setUpdate(update + 1),\n\t\t\t\tdeleteCommentUrl: `${apiLink}/students/${studentId}/courses/${course.id}/posts/${postId}/comments`,\n\t\t\t\tpostCommentUrl: `${apiLink}/students/${studentId}/courses/${course.id}/posts/${postId}/comments`,\n\t\t\t\tcourseId: course.id,\n\t\t\t\tuserId: studentId,\n        userType: \"student\"\n\t\t\t}}\n\t\t>\n\t\t\t<Comments postId={postId} comments={comments} />\n\t\t</CommentsContext.Provider>\n\t);\n}\n\nfunction PostForm(props) {\n\tconst updatePostList = props.updateCallback;\n\tconst studentId = useContext(StudentContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [shown, setShown] = useState(false);\n\n\tconst [post, setPost] = useState({\n\t\ttitle: \"\",\n\t\tbody: \"\"\n\t});\n\n\tconst handleChange = (event) => {\n\t\tevent.preventDefault();\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\t\tconst value = target.value;\n\t\tif (name === \"title\") {\n\t\t\tif (value.length > 100) {\n        alert(\"Error\", \"Title is too long!\", \"error\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsetPost({ ...post, [name]: value });\n\t}\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\n\t\tconst req_body = {\n\t\t\ttitle: post.title,\n\t\t\tbody: post.body\n\t\t};\n\n\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/posts`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(req_body)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n          alert(\"Success!\", res.message, \"success\");\n\t\t\t\t\tupdatePostList();\n\t\t\t\t\tsetShown(false);\n\t\t\t\t} else {\n          alert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\tconst cancel = (event) => {\n\t\tevent.preventDefault();\n\t\tsetShown(false);\n\t}\n\treturn (\n\t\t<div className=\"post-form\">\n\t\t\t<button onClick={() => setShown(true)} className={shown ? \"hidden\" : \"shown\"} >Post</button>\n\t\t\t<form onSubmit={onSubmit} className={shown ? \"shown\" : \"hidden\"}>\n\t\t\t\t<label>\n\t\t\t\t\tTitle<br/>\n\t\t\t\t\t<input type=\"text\" onChange={handleChange} name=\"title\" placeholder=\"Post title\" value={post.title} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tBody<br/>\n\t\t\t\t\t<textarea onChange={handleChange} name=\"body\" rows=\"10\" cols=\"30\" placeholder=\"Post body\" value={post.body} />\n\t\t\t\t</label>\n\t\t\t\t<button type=\"submit\">Add post</button>\n\t\t\t\t<button onClick={cancel}>Cancel</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default PostList;\n","import React, { useEffect, useState, useContext } from 'react';\nimport apiLink from \"../../API\";\nimport { StudentContext } from \"../Student\";\nimport { CourseContext } from \"./Course\";\n\nfunction FileList(props) {\n\tconst course = useContext(CourseContext);\n\tconst studentId = useContext(StudentContext);\n\n\tconst [files, setFiles] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchFiles = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/files`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetFiles(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchFiles();\n\t}, [])\n\n\n\treturn (\n\t\t<div className=\"file-list\">\n\t\t\t<h2>General course files</h2>\n\t\t\t<ul>\n\t\t\t\t{files.map(file => <FileListItem key={file.id} file={file} />)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nfunction FileListItem({ file }) {\n  const studentId = useContext(StudentContext);\n\tconst courseId = file.courseInstanceID;\n  const stripedFilename = file.filename.replace(/-\\d{7,}/, \"\");;\n\n  const downloadUrl = \n    `${apiLink}/students/${studentId}/courses/${courseId}/files/${file.filename}`;\n\n\tconst downloadFile = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.open(downloadUrl, '_blank');\n\t}\n\treturn (\n    <li id={file.id}>\n      <p>{stripedFilename}</p>\n\t\t\t<div className=\"actions\">\n\t\t\t\t<i className=\"material-icons\" onClick={downloadFile}>download</i>\n\t\t\t</div>\n    </li>\n\t);\n}\n\nexport { FileList, FileListItem };\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link, useRouteMatch, useParams, useHistory } from 'react-router-dom';\nimport apiLink from \"../../API\";\nimport { FileListItem } from \"./FileList\";\nimport { CourseContext } from \"./Course\";\nimport { StudentContext } from \"../Student\";\n\n/* Displays the list of assignments for this course */\nfunction AssignmentList(props) {\n\tconst studentId = useContext(StudentContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [assignments, setAssignments] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchAssignments = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/assignments`, {\n\t\t\t\theaders: { 'Authorization': bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetAssignments(res.result)\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchAssignments();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"assignment-list\">\n\t\t\t{assignments.map(a => <AssignmentItem key={a.id} assignment={a} />)}\n\t\t</div>\n\t);\n}\n\n/* Displays one single assignment in the list */\nfunction AssignmentItem(props) {\n\tconst { url } = useRouteMatch();\n\treturn (\n\t\t<div className=\"assignment\">\n\t\t\t<div className=\"title\">\n\t\t\t\t<i className=\"material-icons\">folder</i>\n\t\t\t\t<Link to={`${url}/${props.assignment.id}`}>{props.assignment.title}</Link>\n\t\t\t</div>\n\t\t\t<p>Due {props.assignment.due}</p>\n\t\t</div>\n\t);\n}\n\n/* The component that displays the information about an assignment */\nfunction Assignment(props) {\n\tconst studentId = useContext(StudentContext);\n\tconst course = useContext(CourseContext);\n\tconst { assignmentId } = useParams();\n\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\n\t/* The files that the student has uploaded so far */\n\tconst [files, setFiles] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchFiles = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\t/* Retrieve them from the correct api endpoint */\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/assignments/${assignmentId}/studentfiles`, {\n\t\t\t\theaders: { 'Authorization': bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetFiles(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchFiles();\n\t}, [shouldUpdate]);\n\n\t/* Holds the information about the assignment, like title and description */\n\tconst [assignment, setAssignment] = useState(null);\n\tuseEffect(() => {\n\t\tconst fetchAssignment = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/assignments/${assignmentId}`, {\n\t\t\t\theaders: { 'Authorization': bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetAssignment(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchAssignment();\n\t}, [shouldUpdate]);\n\n\t/* Holds the list of files included in this assignment, like the test that\n\t * you have to solve*/\n\tconst [assignmentFiles, setAssignmentFiles] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchFiles = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/assignments/${assignmentId}/files`, {\n\t\t\t\theaders: { \"Authorization\": bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetAssignmentFiles(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchFiles();\n\t}, [shouldUpdate]);\n\n\tconst update = () => setShouldUpdate(shouldUpdate+1);\n\n\treturn (\n\t\t<div className=\"assignment\">\n\t\t\t<h2>{assignment ? assignment.title : \"title\"}</h2>\n\t\t\t<p>{assignment ? assignment.description : \"description\"}</p>\n\t\t\t<div className=\"files\">\n\t\t\t\t<div className=\"file-list\">\n\t\t\t\t\t<h4>Assignment files</h4>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{assignmentFiles.map(file => <FileListItem key={file.id} file={file} />)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"file-list\">\n\t\t\t\t\t<h4>My files</h4>\n\t\t\t\t\t<FileForm \n\t\t\t\t\t\tclassInstanceId={course.classInstanceID}\n\t\t\t\t\t\tstudentId={studentId} \n\t\t\t\t\t\tcourseId={course.id} \n\t\t\t\t\t\tupdateCallback={update}\n\t\t\t\t\t\tassignmentId={assignmentId} />\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{files.map(file => <StudentFile key={file.id} file={file} updateList={update} />)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/* Displays a single student file */\nfunction StudentFile({file, updateList}) {\n\tconst courseId = file.courseInstanceID;\n\tconst studentId = file.studentID;\n\tconst filename = file.filename;\n\tconst { assignmentId } = useParams();\n\n\tconst downloadFile = (event) => {\n\t\tevent.preventDefault();\n    const downloadUrl = \n      `${apiLink}/students/${studentId}/courses/${courseId}/assignments/${assignmentId}/studentfiles/${filename}`;\n\t\twindow.open(downloadUrl, '_blank');\n\t}\n\tconst deleteFile = (event) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tfetch(`${apiLink}/students/${studentId}/courses/${courseId}/assignments/${assignmentId}/studentfiles/${file.id}`, {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n        if(res.status === \"OK\") {\n          alert(\"Success!\", res.message, \"success\");\n        } else {\n          alert(\"Error\", res.message, \"error\");\n        }\n\t\t\t\tupdateList();\n\t\t\t}).catch(err => console.log(err));\n\t}\n\treturn (\n    <li id={file.id}>\n      <p>{filename.replace(/-\\d{7,}/, \"\")}</p>\n\t\t\t<div className=\"actions\">\n\t\t\t\t<i className=\"material-icons download\" onClick={downloadFile}>download</i>\n\t\t\t\t<i className=\"material-icons delete\" onClick={deleteFile}>delete</i>\n\t\t\t</div>\n    </li>\n\t);\n}\n\n/* Handles uploading a file to the server */\nfunction FileForm(props) {\n\n\tconst studentId = props.studentId;\n\tconst courseId = props.courseId;\n\tconst assignmentId = props.assignmentId;\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n    const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\n\t\tconst form = event.target;\n\t\tconst formData = new FormData(form);\n\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${courseId}/assignments/${assignmentId}/studentfiles`,{\n\t\t\tmethod: 'post',\n      headers: {\n        'Authorization': bearer,\n      },\n\t\t\tbody: formData\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n        if(res.status === \"OK\") {\n          alert(\"Success!\", res.message, \"success\");\n          props.updateCallback();\n        } else {\n          alert(\"Error\", res.message, \"error\");\n        }\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\treturn (\n\t\t<form\n\t\t\tonSubmit={onSubmit}\n\t\t\tmethod=\"post\"\n\t\t\tencType=\"multipart/form-data\">\n\n\t\t\t<input name=\"assignmentID\" value={assignmentId} hidden={true} type=\"text\" readOnly={true} />\n\t\t\t<input name=\"file\" type=\"file\" />\n\t\t\t<input type=\"submit\" />\n\n\t\t</form>\n\t)\n}\n\nexport { AssignmentList, AssignmentItem, Assignment };\n","import React, {useState, useEffect, useContext} from 'react';\nimport {StudentContext} from '../Student';\nimport {CourseContext} from './Course';\nimport apiLink from '../../API';\n\n/* displays a list of attendence sessions */\nexport default function Attendance(props) {\n\tconst studentId = useContext(StudentContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [sessions, setSessions] = useState([]);\n\tuseEffect(() => {\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\t\tconst fetchSessions = async () => {\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${course.id}/attendance`,{\n\t\t\t\theaders: {'Authorization': bearer}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetSessions(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchSessions();\n\t}, []);\n\treturn (\n\t\t<div className=\"sessions\">\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Week</th>\n\t\t\t\t\t\t<th>Topic</th>\n\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t<th>Attended</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{sessions.map(session => <SessionRow key={session.id} session={session} />)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\n/* Displays a single session table row */\nfunction SessionRow(props) {\n\tconst session = props.session;\n\treturn (\n\t\t<tr>\n\t\t\t<td>{session.week}</td>\n\t\t\t<td>{session.topic}</td>\n\t\t\t<td>{session.type}</td>\n\t\t\t<td>{session.date}</td>\n\t\t\t<td>{session.attended} / {session.length}</td>\n\t\t</tr>\n\t)\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport apiLink from \"../../API\";\nimport { StudentContext } from '../Student';\nimport { CourseContext } from './Course';\n\nfunction Grades(props) {\n  const course = useContext(CourseContext);\n  const studentId = useContext(StudentContext);\n\n  const [grades, setGrades] = useState([]);\n  useEffect(() => {\n\n    const getGrades = async () => {\n      const token = sessionStorage.getItem(\"jwt\");\n      const bearer = 'Bearer ' + token;\n      await fetch(`${apiLink}/students/${studentId}/courses/${course.id}/grades`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setGrades(res.result);\n          } else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n          }\n        }).catch(_ => console.log(_));\n    }\n\n    getGrades();\n\n  }, []);\n\n  return <CourseItem grades={grades} />;\n}\n\nfunction CourseItem({ grades }) {\n  return (\n    <div className=\"student-grades\">\n      <table>\n        <thead>\n          <tr>\n            <th>Grade</th>\n            <th>Comment</th>\n            <th>Date</th>\n          </tr>\n        </thead>\n        <tbody>\n          {grades.map(grade => <GradeRow key={grade.id} grade={grade} />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction GradeRow({ grade }) {\n  return (\n    <tr>\n      <td>{grade.grade}</td>\n      <td>{grade.comment}</td>\n      <td>{grade.date}</td>\n    </tr>\n  );\n}\n\nexport default Grades;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useRouteMatch, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport PostList from './PostList';\nimport { FileList } from './FileList';\nimport { AssignmentList, Assignment } from './Assignments';\nimport Attendance from './Attendance';\nimport Grades from './Grades';\nimport apiLink from \"../../API\";\nimport { StudentContext } from \"../Student\";\n\nexport const CourseContext = React.createContext({});\n\nfunction Course(props) {\n\tconst studentId = useContext(StudentContext);\n\tconst { courseId } = useParams();\n\tconst { path, url } = useRouteMatch();\n\n\tconst [course, setCourse] = useState({});\n\tuseEffect(() => {\n\t\tconst fetchCourse = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/courses/${courseId}`, {\n\t\t\t\theaders: {'Authorization': bearer}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetCourse(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchCourse();\n\t}, [studentId, courseId]);\n\n\treturn (\n\t\t<CourseContext.Provider value={course}>\n\t\t\t<div className=\"course\">\n\t\t\t\t<NavBar />\n\t\t\t\t<Switch>\n\n\t\t\t\t\t<Route exact path={`${path}/`}>\n\t\t\t\t\t\t<Redirect to={`${url}/posts`} />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path={`${path}/posts`}>\n\t\t\t\t\t\t<PostList />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path={`${path}/attendance`}>\n\t\t\t\t\t\t<Attendance />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path={`${path}/assignments`}>\n\t\t\t\t\t\t<AssignmentList />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path={`${path}/assignments/:assignmentId`}>\n\t\t\t\t\t\t<Assignment />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path={`${path}/files`}>\n\t\t\t\t\t\t<FileList />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path={`${path}/grades`}>\n\t\t\t\t\t\t<Grades />\n\t\t\t\t\t</Route>\n\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</CourseContext.Provider>\n\t);\n}\n\nfunction NavBar(props) {\n\tconst { url } = useRouteMatch();\n\tconst course = useContext(CourseContext);\n\n\tconst [onFocus, setFocus] = useState(\"home\");\n\n\n\treturn (\n\t\t<div className=\"navbar\">\n\t\t\t<h1>{course.name}</h1>\n\t\t\t<ul>\n        <li className={onFocus === \"posts\" ? \"active\" : \"\"}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`${url}/posts`}\n\t\t\t\t\t\tonClick={() => setFocus(\"posts\")}\n\t\t\t\t\t>Posts</Link>\n\t\t\t\t</li>\n        <li className={onFocus === \"assignments\" ? \"active\" : \"\"}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`${url}/assignments`}\n\t\t\t\t\t\tonClick={() => setFocus(\"assignments\")}\n\t\t\t\t\t>Assignments</Link>\n\t\t\t\t</li>\n        <li className={onFocus === \"files\" ? \"active\" : \"\"}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`${url}/files`}\n\t\t\t\t\t\tonClick={() => setFocus(\"files\")}\n\t\t\t\t\t>Files</Link>\n\t\t\t\t</li>\n        <li className={onFocus === \"grades\" ? \"active\" : \"\"}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`${url}/grades`}\n\t\t\t\t\t\tonClick={() => setFocus(\"grades\")}\n\t\t\t\t\t>Grades</Link>\n\t\t\t\t</li>\n        <li className={onFocus === \"attendance\" ? \"active\" : \"\"}>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`${url}/attendance`}\n\t\t\t\t\t\tonClick={() => setFocus(\"attendance\")}\n\t\t\t\t\t>Attendance</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nexport default Course;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Course from './Course';\nimport apiLink from \"../../API\";\nimport { StudentContext } from \"../Student\";\nimport { getColorForCourse } from '../../Utils';\n\nfunction Courses(props) {\n  let { path } = useRouteMatch();\n\n  return (\n    <div className=\"courses-page\">\n      <header>\n        <h2>Courses</h2>\n      </header>\n      <section>\n        <Switch>\n          <Route exact path={`${path}/`} >\n            <CourseList />\n          </Route>\n          <Route path={`${path}/:courseId`} >\n            <Course />\n          </Route>\n        </Switch>\n      </section>\n    </div>\n  );\n}\n\nfunction CourseList(props) {\n  const studentId = useContext(StudentContext);\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n\n    const fetchCourses = async () => {\n      const token = sessionStorage.getItem(\"jwt\");\n      const bearer = 'Bearer ' + token;\n\n      await fetch(`${apiLink}/students/${studentId}/courses`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setCourses(res.result);\n          } else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n          }\n        }).catch(_ => console.log(_));\n    }\n    fetchCourses();\n\n  }, []);\n  return (\n    <div className=\"courses-list\">\n      <table>\n        <thead>\n          <tr>\n            <th></th>\n            <th>COURSE</th>\n            <th>CATEGORY</th>\n            <th>HOURS PER WEEK</th>\n            <th>TEACHER</th>\n            <th>LAST GRADE</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {courses.map(x => <CourseListItem key={x.id} course={x} />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst CourseListItem = (props) => {\n  const { url } = useRouteMatch();\n  const studentId = useContext(StudentContext);\n\n  /* This state and useEffect function are used to get the hours per week and\n   * last grade for each course */\n  const [hoursPerWeek, setHoursPerWeek] = useState(0);\n  const [lastGrade, setLastGrade] = useState(null);\n  useEffect(() => {\n    /* Get hours per week */\n    const fetchHoursPerWeek = async () => {\n      const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n      await fetch(`${apiLink}/students/${studentId}/courses/${props.course.id}/hours`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setHoursPerWeek(res.result);\n          } else {\n            console.log(res.message);\n          }\n        }).catch(err => console.log(err));\n    }\n\n    /* Get last grade */\n    const fetchLastGrade = async () => {\n      const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n      await fetch(`${apiLink}/students/${studentId}/courses/${props.course.id}/lastgrade`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setLastGrade(res.result);\n          } else {\n            console.log(res.message);\n          }\n        }).catch(err => console.log(err));\n    }\n\n    fetchHoursPerWeek();\n    fetchLastGrade();\n\n  }, [studentId, props.course.id]);\n\n  return (\n    <tr>\n      <td className=\"color\">\n        <div style={{ backgroundColor: getColorForCourse(props.course.id) }}></div>\n      </td>\n      <td className=\"name\">{props.course.name}</td>\n      <td className=\"category\">{props.course.category}</td>\n      <td className=\"hours\">{hoursPerWeek}</td>\n      <td className=\"teacher\">{props.course.teacher}</td>\n      <td className=\"grade\">{lastGrade ? lastGrade : \"No grades yet\"}</td>\n      <td><Link to={`${url}/${props.course.id}`}>View</Link></td>\n    </tr>\n  );\n}\n\nexport default Courses;\n","import { useContext, useState, useEffect } from 'react';\nimport { StudentContext } from '../Student';\nimport { validateEmail, validateNameString, validatePhone } from '../../Utils';\nimport apiLink from '../../API';\n\n/* Controlled component for updating info about the teacher */\nfunction Profile(props) {\n\tconst studentId = useContext(StudentContext);\n\n\t/* This state will hold info about the form entered so far\n\t * We use the useEffect hook to connect to the database and get the\n\t * current info about the student, then the student can modify them\n\t * */\n\tconst [student, setStudent] = useState({\n\t\tfirstname: \"\",\n\t\tlastname: \"\",\n\t\temail: \"\",\n\t\taddress: \"\",\n\t\tphone: \"\"\n\t});\n\tuseEffect(() => {\n\t\tconst fetchStudent = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}`, {\n\t\t\t\theaders: { 'Authorization': bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetStudent(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchStudent();\n\t}, [studentId]);\n\n\t/* This function is used for handling form changes */\n\tconst handleChange = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst target = event.target;\n\t\t/* The name of the input field that has changed */\n\t\tconst name = target.name;\n\t\t/* The changed value of the input field */\n\t\tconst value = target.value;\n\n\t\t/* Perform validations */\n\t\tif (name === \"firstname\" || name === \"lastname\") {\n\t\t\tif (!validateNameString(value)) {\n\t\t\t\talert(\"Error\", `The firstname and lastname fields should only containt letters, and be no longer than 30 characters`, \"error\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t/* Update the state if all the validations were successful */\n\t\tsetStudent({ ...student, [name]: value });\n\t}\n\n\t/* This functions submits the information to the api and handles the\n\t * response */\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\t/* Check the integrity of email and phone number fields */\n\t\tif (!validateEmail(student.email)) {\n\t\t\talert(\"Error\", \"Invalid email\", \"error\");\n\t\t\treturn;\n\t\t} else if (!validatePhone(student.phone)) {\n\t\t\talert(\"Error\", \"Invalid phone number\", \"error\");\n\t\t\treturn;\n\t\t}\n\n\t\t/* Set up the request */\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\t\tawait fetch(`${apiLink}/students/${studentId}`, {\n\t\t\tmethod: 'put',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(student)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\treturn res;\n\t\t\t})\n\t\t\t.then(res => res.status === \"OK\" ? res.result : null)\n\t\t\t.then(result => {\n\t\t\t\tif (result) {\n\t\t\t\t\tresult.affectedRows === 1\n\t\t\t\t\t\t? alert(\"Success\", \"Student updated successfully\", \"success\")\n\t\t\t\t\t\t: alert(\"Error\", \"Something went wrong, pleasy try again\", \"error\");\n\t\t\t\t} else throw new Error(\"Student could not update due to an internal error\");\n\t\t\t}).catch(err => console.log(err.message));\n\t}\n\n\n\treturn (\n\t\t<div className=\"user-form\">\n\t\t\t<header>\n\t\t\t\t<h2>Your Information</h2>\n\t\t\t</header>\n\t\t\t<section>\n\t\t\t\t<h2>Update profile info</h2>\n\t\t\t\t<form className=\"student-form\" onSubmit={onSubmit}>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tFirstname:\n\t\t\t\t\t<input onChange={handleChange} name=\"firstname\" value={student.firstname} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tLastname:\n\t\t\t\t\t<input onChange={handleChange} name=\"lastname\" value={student.lastname} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tEmail:\n\t\t\t\t\t<input type=\"email\" onChange={handleChange} name=\"email\" value={student.email} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tAddress:\n\t\t\t\t\t<input onChange={handleChange} name=\"address\" value={student.address} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tPhone number:\n\t\t\t\t\t<input onChange={handleChange} name=\"phone\" value={student.phone} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<button>Update</button>\n\t\t\t\t</form>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nexport default Profile;\n","import React from 'react';\nimport { getColorForCourse } from '../Utils';\n\n/* The schedule types */\nexport interface Day {\n\tid: number\n\tname: string\n\thours: Hour[]\n\tday: number\n}\nexport interface Hour {\n\tid: number\n\tcourse_name: string\n\tcourse_category: string\n\tcourseInstanceID: number\n\tstart: string\n\tend: string\n}\n\n/* The schedule settings, it defines the width of each day in pixels\n* and also the height of each hour using the pixerPerMinute field */\nconst ScheduleSettings = {\n\tpixelPerMinute: 2,\n\tdayWidth: 200\n};\n\n/* Utility function used to calculate length between two times (\"8:45\")\n * Params:\n *  - start: string -- defines the start time,\n *  - end: string -- defines the end time\n * Returns:\n *  - length: number -- the length of the distance between the two times\n * */\nconst calculateLength = (start: string, end: string): number => {\n\tconst [s_h, s_m] = start.split(\":\");\n\tconst [e_h, e_m] = end.split(\":\");\n\tconst interval_length = (parseInt(e_h) - parseInt(s_h)) * 60\n\t\t+ (parseInt(e_m) - parseInt(s_m));\n\treturn interval_length;\n}\n\n/* Displays the schedule */\nconst Schedule = (props: {days: Day[]}) => {\n\tconst days = props.days;\n\treturn (\n\t\t<div className=\"schedule\">\n\t\t\t<header>\n\t\t\t\t<h2>Schedule</h2>\n\t\t\t</header>\n\t\t\t<section>\n\t\t\t\t<Timeline />\n\t\t\t\t{days.map((day, index) => (\n\t\t\t\t\t<div className={\"day-container\"}>\n\t\t\t\t\t\t<h4>{day.name}</h4>\n\t\t\t\t\t\t<Day day={day} last={index === days.length - 1} />\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\n/* Displays a column of times */\nconst Timeline = () => {\n\tlet hours = [];\n\tfor (let i = 0; i < 12; i++) {\n\t\thours.push(<p>{8 + i}:00</p>);\n\t}\n\treturn (\n\t\t<div className=\"timeline\">\n\t\t\t{hours}\n\t\t</div>\n\t);\n}\n\n/* Displays a single day column */\nconst Day = (props: { day: Day, last: boolean }) => {\n\tlet blocks = [];\n\tconst blockStyle = {\n\t\twidth: ScheduleSettings.dayWidth,\n\t\theight: ScheduleSettings.pixelPerMinute * 60 - 1\n\t};\n\tfor (let i = 0; i < 12; i++) {\n\t\tblocks.push(<div className=\"block\" style={blockStyle}></div>);\n\t}\n\tlet last = \"\";\n\tif (props.last) last = \"last\";\n\treturn (\n\t\t<div className={`day ${last}`}>\n\t\t\t{blocks}\n\t\t\t{props.day.hours.map(hour => <Hour key={hour.id} hour={hour} />)}\n\t\t</div>\n\t);\n}\n\n/* Displays a single hour */\nconst Hour = (props: { hour: Hour }) => {\n\tconst hour = props.hour;\n\tconst start_split = hour.start.split(\":\");\n\tconst end_split = hour.end.split(\":\");\n\tconst hourStyle = {\n\t\twidth: ScheduleSettings.dayWidth - 60,\n\t\theight: calculateLength(hour.start, hour.end) * ScheduleSettings.pixelPerMinute,\n\t\ttop: calculateLength(\"8:00\", hour.start) * ScheduleSettings.pixelPerMinute,\n\t\tleft: 30,\n\t\tright: 30,\n    backgroundColor: getColorForCourse(hour.courseInstanceID),\n    color: '#000'\n\t};\n\treturn (\n\t\t<div className=\"hour\" style={hourStyle}>\n\t\t\t<p>{hour.course_name}</p>\n\t\t\t<p>{`${start_split[0]}:${start_split[1]}`} - {`${end_split[0]}:${end_split[1]}`}</p>\n\t\t</div>\n\t);\n}\n\nexport default Schedule;\n","import React, { useState, useEffect, useContext } from 'react';\nimport apiLink from '../../API';\nimport { StudentContext } from '../Student';\nimport { organizeSchedule } from '../../Utils';\nimport Schedule from '../../shared/Schedule';\n\nconst ScheduleDataProvider = () => {\n\tconst studentId = useContext(StudentContext);\n\t/* This state and useEffect are used to get the list of days, along with\n\t * their specific day hours for this schedule */\n\tconst [days, setDays] = useState<any[]>([]);\n\tuseEffect(() => {\n\t\tconst fetchDays = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\t\t\tawait fetch(`${apiLink}/students/${studentId}/schedule`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\t/* From the api we get a list of hours, each hour has it's own day\n\t\t\t\t\t\t * information, we use the function organizeSchedule to organize\n\t\t\t\t\t\t * the hours into a list of days, each day with an array of hours */\n\t\t\t\t\t\tconst organized_days = organizeSchedule(res.result);\n\t\t\t\t\t\tsetDays(organized_days);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(alert as any)(\"Error\", res.message || \"An error occured!\", \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchDays();\n\t}, [studentId]);\n\treturn (\n\t\t<>\n\t\t\t<Schedule days={days} />\n\t\t</>\n\t);\n}\n\nexport default ScheduleDataProvider;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport apiLink from \"../../API\";\nimport { StudentContext } from \"../Student\";\n\ntype Student = {\n\tfirstname: string;\n\tlastname: string;\n\temail: string;\n\taddress: string;\n\tphone: string;\n\tage: number;\n\tgender: string;\n\tnationality: string;\n\tpassword: string\n};\n\nconst Settings = () => {\n\tconst studentId = useContext(StudentContext);\n\tconst history = useHistory();\n\n\t/* This state is used to information about the student */\n\tconst [student, setStudent] = useState<Student>({\n\t\tfirstname: \"\",\n\t\tlastname: \"\",\n\t\temail: \"\",\n\t\taddress: \"\",\n\t\tphone: \"\",\n\t\tage: 0,\n\t\tgender: \"\",\n\t\tnationality: \"\",\n\t\tpassword: \"\"\n\t});\n\tuseEffect(() => {\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\t\tfetch(`${apiLink}/students/${studentId}`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetStudent(res.result);\n\t\t\t\t} else {\n\t\t\t\t\t(alert as any)(\"Error\", res.message, \"error\");\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t}\n\t\t\t}).catch(_ => console.log(_));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"settings\">\n\t\t\t<header>\n\t\t\t\t<h2>Settings</h2>\n\t\t\t</header>\n\t\t\t<section>\n\t\t\t\t<ProfileInfo student={student} />\n\t\t\t\t<ProfilePictureForm />\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\n/* Displays profile information about the student */\nfunction ProfileInfo(props: { student: Student }) {\n\tconst student = props.student;\n\tconst history = useHistory();\n\tconst { url } = useRouteMatch();\n\treturn (\n\t\t<div className=\"profile\">\n\t\t\t<div className=\"head\">\n\t\t\t\t<h3>Profile information</h3>\n\t\t\t\t<button onClick={() => history.push(`${url}/profile`)}>Update</button>\n\t\t\t</div>\n\t\t\t<div className=\"labels\">\n\t\t\t\t<p>Firstname: </p>\n\t\t\t\t<p>Lastname: </p>\n\t\t\t\t<p>Email: </p>\n\t\t\t\t<p>Address: </p>\n\t\t\t\t<p>Phone Number: </p>\n\t\t\t\t<p>Age: </p>\n\t\t\t\t<p>Gender: </p>\n\t\t\t\t<p>Nationality: </p>\n\t\t\t</div>\n\t\t\t<div className=\"values\">\n\t\t\t\t<p>{student.firstname}</p>\n\t\t\t\t<p>{student.lastname}</p>\n\t\t\t\t<p>{student.email}</p>\n\t\t\t\t<p>{student.address}</p>\n\t\t\t\t<p>{student.phone}</p>\n\t\t\t\t<p>{student.age}</p>\n\t\t\t\t<p>{student.gender}</p>\n\t\t\t\t<p>{student.nationality}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nconst ProfilePictureForm = () => {\n\tconst studentId = useContext(StudentContext);\n\tconst uploadImage = async (event: React.FormEvent) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tconst form = event.target;\n\t\tconst formData = new FormData(form as HTMLFormElement);\n\t\tawait fetch(`${apiLink}/students/${studentId}/picture`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: formData\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n        if(res.status === \"OK\") {\n          (alert as any)(\"Success!\", res.message, \"success\");\n        } else {\n          (alert as any)(\"Error\", res.message, \"error\");\n        }\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<h3>Update the profile picture</h3>\n\t\t\t<form onSubmit={uploadImage}>\n\t\t\t\t<input type=\"file\" name=\"file\" />\n\t\t\t\t<input type=\"submit\" value=\"Update\" />\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default Settings;\n","import React from 'react';\nimport { Route, Switch, Redirect, useParams, useRouteMatch } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Home from './home/Home';\nimport Courses from './courses/Courses';\nimport Profile from './settings/Profile';\nimport Schedule from './schedule/Schedule';\nimport Settings from './settings/Settings';\n\nexport const StudentContext = React.createContext(null);\n\nfunction Student() {\n  const { id } = useParams();\n  const { url, path } = useRouteMatch();\n\n  return (\n    <StudentContext.Provider value={id}>\n      <div className=\"StudentPage\">\n        <NavBar />\n        <main>\n          <Switch>\n            <Route path={`${path}/courses`}>\n              <Courses />\n            </Route>\n\n            <Route exact path={`${path}/`}>\n              <Redirect to={`${url}/home`} />\n            </Route>\n\n            <Route exact path={`${path}/home`}>\n              <Home />\n            </Route>\n\n            <Route exact path={`${path}/schedule`}>\n              <Schedule />\n            </Route>\n\n            <Route exact path={`${path}/settings`}>\n              <Settings />\n            </Route>\n\n            <Route exact path={`${path}/settings/profile`}>\n              <Profile />\n            </Route>\n\n          </Switch>\n        </main>\n      </div>\n    </StudentContext.Provider>\n  );\n}\n\n\nexport default Student;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useRouteMatch, useHistory } from 'react-router-dom';\nimport apiLink from '../API';\nimport {TeacherContext} from './Teacher';\n\n\nexport default function NavBar() {\n  const teacherId = useContext(TeacherContext);\n  let match = useRouteMatch();\n  const history = useHistory();\n\n  const [onFocus, setFocus] = useState(\"home\");\n\n  const logout = (event) => {\n    event.preventDefault();\n    sessionStorage.setItem(\"jwt\", \"\");\n    history.push(\"/\");\n  }\n\n  const [fullName, setFullName] = useState(\"\");\n  useEffect(() => {\n    const fetchTeacher = async () => {\n      const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n      await fetch(`${apiLink}/teachers/${teacherId}`, {\n        headers: {\n          'Authorization': bearer\n        }\n      }).then(res => res.json())\n        .then(res => {\n          if(res.status === \"OK\") {\n            setFullName(res.result.firstname + \" \" + res.result.lastname);\n          } else {\n            console.log(res.message);\n          }\n        }).catch(err => console.log(err));\n    }\n    fetchTeacher();\n  }, [teacherId]);\n\n  return (\n    <div className=\"sidenav\">\n      <div className=\"profile\">\n        {/* TODO: Write an onerror function for the image */}\n        <img src={`${apiLink}/teachers/${teacherId}/picture`}/>\n        <h5>{fullName}</h5>\n      </div>\n      <Link to={`${match.url}/home`}\n        onClick={() => setFocus(\"home\")}\n        className={onFocus === \"home\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">home</i>\n        <p>Home</p>\n      </Link>\n\n      <Link to={`${match.url}/class`}\n        onClick={() => setFocus(\"class\")}\n        className={onFocus === \"class\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">face</i>\n        <p>My class</p>\n      </Link>\n\n      <Link to={`${match.url}/courses`}\n        onClick={() => setFocus(\"courses\")}\n        className={onFocus === \"courses\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">description</i>\n        <p>My Courses</p>\n      </Link>\n\n      <Link to={`${match.url}/schedule`}\n        onClick={() => setFocus(\"schedule\")}\n        className={onFocus === \"schedule\" ? \"active\" : \"\"}\n      >\n        <i className=\"material-icons\">schedule</i>\n        <p>Schedule</p>\n      </Link>\n\n      <Link to={`/`} onClick={ logout } className=\"logout\">\n        <i className=\"material-icons\">logout</i>\n        <p>Log out</p>\n      </Link>\n    </div>\n  );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport apiLink from \"../../API\";\nimport { CourseContext } from \"./Course\";\nimport { TeacherContext } from \"../Teacher\";\nimport { CommentsContext, Comments } from \"../../shared/PostComments\";\n\n/* Displays a list of posts */\nfunction PostList(props) {\n\tconst course = useContext(CourseContext);\n\tconst teacherId = useContext(TeacherContext);\n\n\t/* This variable is used to determine when we should update the post list.\n\t * Typically this is done after we have added a new post. Everytime this\n\t * changes the useEffect hook will rerun.*/\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\n\tconst [posts, setPosts] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchPosts = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/posts`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetPosts(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\tfetchPosts();\n\t}, [shouldUpdate, course.id, teacherId]);\n\n\tconst update = () => setShouldUpdate(shouldUpdate + 1);\n\n\treturn (\n\t\t<div className=\"post-list\">\n\t\t\t<PostForm updateCallback={update} />\n\t\t\t{posts.map(post =>\n\t\t\t\t<PostItem key={post.id} post={post} updateList={update} />)\n\t\t\t}\n\t\t</div>\n\t);\n}\n\n/* Displays a single post */\nfunction PostItem({ post, updateList }) {\n\tconst course = useContext(CourseContext);\n\tconst teacherId = useContext(TeacherContext);\n\tconst [modifyPost, setModifyPost] = useState(false);\n\n\tconst deletePost = (event) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/posts/${post.id}`, {\n\t\t\tmethod: \"delete\",\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t}).then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success\", res.message, \"success\");\n\t\t\t\t\tupdateList();\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\tconst textLines = post.body.split(\"\\n\");\n\n\treturn (\n\t\t<div className=\"post-item\">\n\t\t\t<div className=\"header\">\n\t\t\t\t<div className=\"header__title\">\n\t\t\t\t\t<p><b>{post.author}</b></p>\n\t\t\t\t\t<p>{post.posted_on}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__actions\">\n\t\t\t\t\t<i\n\t\t\t\t\t\tclassName=\"material-icons header__actions__edit\"\n\t\t\t\t\t\tonClick={() => setModifyPost(true)}\n\t\t\t\t\t>edit</i>\n\t\t\t\t\t<i\n\t\t\t\t\t\tclassName=\"material-icons header__actions__delete\"\n\t\t\t\t\t\tonClick={deletePost}\n\t\t\t\t\t>delete</i>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"body\">\n\t\t\t\t<p><b>{post.title}</b></p>\n\t\t\t\t{textLines.map(line => <p>{line}</p>)}\n\t\t\t</div>\n\t\t\t<CommentSection postId={post.id} />\n\n\t\t\t{modifyPost\n\t\t\t\t? (<ModifyPost\n\t\t\t\t\tpost={post}\n\t\t\t\t\tclose={() => setModifyPost(false)}\n\t\t\t\t\tupdateList={updateList} />\n\t\t\t\t)\n\t\t\t\t: null}\n\t\t</div>\n\t);\n}\n\nconst CommentSection = ({ postId }) => {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [update, setUpdate] = useState(0);\n\tconst [comments, setComments] = useState([]);\n\tuseEffect(() => {\n\t\t/* The jwt token */\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\t/* Perform a get request to the api */\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/posts/${postId}/comments`, {\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t}).then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tsetComments(res.result);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(res.message);\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}, [teacherId, course.id, postId, update]);\n\treturn (\n\n\t\t<CommentsContext.Provider\n\t\t\tvalue={{\n\t\t\t\tpostId: postId,\n\t\t\t\tupdateList: () => setUpdate(update + 1),\n\t\t\t\tdeleteCommentUrl: `${apiLink}/teachers/${teacherId}/courses/${course.id}/posts/${postId}/comments`,\n\t\t\t\tpostCommentUrl: `${apiLink}/teachers/${teacherId}/courses/${course.id}/posts/${postId}/comments`,\n\t\t\t\tcourseId: course.id,\n\t\t\t\tuserId: teacherId,\n\t\t\t\tuserType: \"teacher\"\n\t\t\t}}\n\t\t>\n\t\t\t<Comments postId={postId} comments={comments} />\n\t\t</CommentsContext.Provider>\n\t);\n}\n\nconst ModifyPost = (props) => {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\tconst [post, setPost] = useState({ ...props.post });\n\n\tconst onSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\n\t\tconst req_body = {\n\t\t\ttitle: post.title,\n\t\t\tbody: post.body\n\t\t};\n\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/posts/${post.id}`, {\n\t\t\tmethod: 'put',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(req_body)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tprops.updateList(post);\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tprops.close();\n\t\t\t}).catch(err => console.log(err));\n\t};\n\tconst handleChange = (event) => {\n\t\tevent.preventDefault();\n\t\tconst { name, value } = event.target;\n\t\tsetPost({ ...post, [name]: value });\n\t};\n\tconst cancel = (event) => {\n\t\tevent.preventDefault();\n\t\tprops.close();\n\t};\n\treturn (\n\t\t<div className=\"modify-post\">\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<label>\n\t\t\t\t\tTitle<br />\n\t\t\t\t\t<input type=\"text\" onChange={handleChange} name=\"title\" placeholder=\"Post title\" value={post.title} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tBody<br />\n\t\t\t\t\t<textarea onChange={handleChange} name=\"body\" rows=\"10\" cols=\"30\" placeholder=\"Post body\" value={post.body} />\n\t\t\t\t</label>\n\t\t\t\t<button type=\"submit\">Modify Post</button>\n\t\t\t\t<button onClick={cancel}>Cancel</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nfunction PostForm(props) {\n\tconst updatePostList = props.updateCallback;\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [shown, setShown] = useState(false);\n\n\tconst [post, setPost] = useState({\n\t\ttitle: \"\",\n\t\tbody: \"\"\n\t});\n\n\tconst handleChange = (event) => {\n\t\tevent.preventDefault();\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\t\tconst value = target.value;\n\t\tif (name === \"title\") {\n\t\t\tif (value.length > 100) {\n\t\t\t\talert(\"Error\", \"The title is too long\", \"error\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tsetPost({ ...post, [name]: value });\n\t}\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\n\t\tconst req_body = {\n\t\t\ttitle: post.title,\n\t\t\tbody: post.body\n\t\t};\n\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/posts`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(req_body)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success\", \"Post added successfully!\", \"success\");\n\t\t\t\t\tupdatePostList();\n\t\t\t\t\tsetShown(false);\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\n\tconst cancel = (event) => {\n\t\tevent.preventDefault();\n\t\tsetShown(false);\n\t}\n\treturn (\n\t\t<div className=\"post-form\">\n\t\t\t<button onClick={() => setShown(true)} className={shown ? \"hidden\" : \"shown\"} >Post</button>\n\t\t\t<form onSubmit={onSubmit} className={shown ? \"shown\" : \"hidden\"}>\n\t\t\t\t<label>\n\t\t\t\t\tTitle<br />\n\t\t\t\t\t<input type=\"text\" onChange={handleChange} name=\"title\" placeholder=\"Post title\" value={post.title} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tBody<br />\n\t\t\t\t\t<textarea onChange={handleChange} name=\"body\" rows=\"10\" cols=\"30\" placeholder=\"Post body\" value={post.body} />\n\t\t\t\t</label>\n\t\t\t\t<button type=\"submit\">Add post</button>\n\t\t\t\t<button onClick={cancel}>Cancel</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\n\nexport default PostList;\n","import React, { useEffect, useState, useContext } from 'react';\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport { CourseContext } from \"./Course\";\n\n/* Displays a list of general course files */\nfunction FileList(props) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\n\tconst [files, setFiles] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchFiles = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\n\t\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/files`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetFiles(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchFiles();\n\t}, [teacherId, course.id, shouldUpdate])\n\n\tconst update = () => setShouldUpdate(shouldUpdate + 1);\n\n\treturn (\n\t\t<div className=\"file-list\">\n\t\t\t<FileForm\n\t\t\t\tupdateList={update}\n\t\t\t\tclassInstanceId={course.classInstanceID}\n\t\t\t\tcourseId={course.id} />\n\t\t\t<ul>\n\t\t\t\t{files.map(file => <FileListItem key={file.id} updateList={update} file={file} />)}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\n/* Renders a single file */\nfunction FileListItem({ file, updateList }) {\n  const stripedFilename = file.filename.replace(/-\\d{7,}/, \"\");;\n\tconst courseId = file.courseInstanceID;\n\tconst teacherId = useContext(TeacherContext);\n\n\tconst deleteFile = (event) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${courseId}/files/${file.id}`, {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tupdateList();\n\t\t\t}).catch(err => console.log(err));\n\t}\n\tconst downloadFile = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.open(\n\t\t\t`${apiLink}/teachers/${teacherId}/courses/${courseId}/files/${file.filename}`,\n\t\t\t'_blank');\n\t}\n\treturn (\n\t\t<li id={file.id}>\n\t\t\t<p>{stripedFilename}</p>\n\t\t\t<div className=\"actions\">\n\t\t\t\t<i className=\"material-icons download\" onClick={downloadFile}>download</i>\n\t\t\t\t<i className=\"material-icons delete\" onClick={deleteFile}>delete</i>\n\t\t\t</div>\n\t\t</li>\n\t);\n}\n\n/* Handles uploading a file to the api */\nfunction FileForm(props) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst courseId = props.courseId;\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tconst form = event.target;\n\t\tconst formData = new FormData(form);\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${courseId}/files`, {\n\t\t\tmethod: 'post',\n\t\t\tbody: formData,\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tprops.updateList();\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\treturn (\n\t\t<div className=\"file-form\">\n\t\t\t<form\n\t\t\t\tonSubmit={onSubmit}\n\t\t\t\tmethod=\"post\"\n\t\t\t\tencType=\"multipart/form-data\">\n\n\t\t\t\t<input type=\"file\" name=\"file\" />\n\t\t\t\t<input type=\"submit\" value=\"Upload\" />\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default FileList;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Link, useRouteMatch, useParams } from 'react-router-dom';\nimport apiLink from \"../../API\";\nimport { CourseContext } from \"./Course\";\nimport { TeacherContext } from \"../Teacher\";\nimport { organizeStudents } from '../../Utils';\n\n/* Displays the list of assignments for this course */\nfunction AssignmentList(props) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\n\tconst [assignments, setAssignments] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchAssignments = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/assignments`, {\n\t\t\t\theaders: { 'Authorization': bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetAssignments(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchAssignments();\n\t}, [teacherId, course.id, shouldUpdate]);\n\n\tconst update = () => setShouldUpdate(shouldUpdate + 1);\n\n\treturn (\n\t\t<div className=\"assignment-list\">\n\t\t\t<AssignmentForm updateCallback={update} />\n\t\t\t{assignments.map(a => <AssignmentItem key={a.id} assignment={a} updateList={update} />)}\n\t\t</div>\n\t);\n}\n\n/* Displays one single assignment in the list */\nfunction AssignmentItem({ assignment, updateList }) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst { url } = useRouteMatch();\n\tconst [modify, setModify] = useState(false);\n\n\tconst onDeleteClicked = () => {\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${assignment.courseInstanceID}/assignments/${assignment.id}`, {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t}).then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tupdateList();\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t}).catch(err => console.log(err));\n\t}\n\treturn (\n\t\t<div className=\"assignment\">\n\t\t\t<div className=\"title\">\n\t\t\t\t<i className=\"material-icons\">folder</i>\n\t\t\t\t<Link to={`${url}/${assignment.id}`}>{assignment.title}</Link>\n\t\t\t</div>\n\t\t\t<div className=\"actions\">\n\t\t\t\t<p>Due {assignment.due}</p>\n\t\t\t\t<i className=\"material-icons actions__edit\" onClick={() => setModify(true)}>edit</i>\n\t\t\t\t<i className=\"material-icons actions__delete\" onClick={onDeleteClicked}>delete</i>\n\t\t\t</div>\n\t\t\t{modify ? (<ModifyAssignment updateList={updateList} assignment={assignment} close={() => setModify(false)} />) : null}\n\n\t\t</div>\n\t);\n}\n\n/* Displays a popup to modify the assignment */\nfunction ModifyAssignment({ assignment, close, updateList }) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst [form, setForm] = useState({\n\t\ttitle: assignment.title,\n\t\tdescription: assignment.description,\n\t\tdue: assignment.due\n\t});\n\tconst handleChange = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst name = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tif (name === 'title' && value.length > 100) {\n\t\t\talert(\"Error\", \"Title is too long!\", \"error\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetForm({ ...form, [name]: value });\n\t};\n\tconst onSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${assignment.courseInstanceID}/assignments/${assignment.id}`, {\n\t\t\tmethod: 'put',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer,\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t\tupdateList();\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tclose();\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t};\n\tconst cancel = (event) => {\n\t\tevent.preventDefault();\n\t\tclose();\n\t};\n\treturn (\n\t\t<div className=\"assignment__modify\">\n\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t<label>\n\t\t\t\t\tTitle\n\t\t\t\t\t<br />\n\t\t\t\t\t<input name=\"title\" value={form.title} onChange={handleChange} type=\"text\" />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tDescription\n\t\t\t\t\t<br />\n\t\t\t\t\t<input name=\"description\" value={form.description} onChange={handleChange} type=\"text\" />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tDue\n\t\t\t\t\t<br />\n\t\t\t\t\t<input name=\"due\" value={form.due} onChange={handleChange} type=\"datetime-local\" />\n\t\t\t\t</label>\n\t\t\t\t<button>Modify assignment</button>\n\t\t\t\t<button onClick={cancel}>Cancel</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\n/* Handles creating a new assignment */\nfunction AssignmentForm(props) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\n\tconst [form, setForm] = useState({\n\t\ttitle: \"\",\n\t\tdescription: \"\",\n\t\tdue: \"\"\n\t});\n\n\tconst [shown, setShown] = useState(false);\n\n\tconst handleChange = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst name = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tif (name === 'title' && value.length > 100) {\n\t\t\talert(\"Error\", \"Title is too long!\", \"error\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/assignments`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer,\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success\", \"Assignment added successfully!\", \"success\");\n\t\t\t\t\t/* This function updates the assignment list */\n\t\t\t\t\tprops.updateCallback();\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", \"Could not add assignment!\", \"error\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\tconst hide = (event) => {\n\t\tevent.preventDefault();\n\t\tsetShown(false);\n\t}\n\n\treturn (\n\t\t<div className=\"assignment-form\">\n\t\t\t<button className={shown ? \"hidden\" : \"shown\"} onClick={() => setShown(true)}>Add assignment</button>\n\t\t\t<form onSubmit={onSubmit} className={shown ? \"shown\" : \"hidden\"}>\n\t\t\t\t<label>\n\t\t\t\t\tTitle\n\t\t\t\t\t<br />\n\t\t\t\t\t<input name=\"title\" value={form.title} onChange={handleChange} type=\"text\" />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tDescription\n\t\t\t\t\t<br />\n\t\t\t\t\t<input name=\"description\" value={form.description} onChange={handleChange} type=\"text\" />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tDue\n\t\t\t\t\t<br />\n\t\t\t\t\t<input name=\"due\" value={form.due} onChange={handleChange} type=\"datetime-local\" />\n\t\t\t\t</label>\n\t\t\t\t<button>Add assignment</button>\n\t\t\t\t<button onClick={hide}>Cancel</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\n/* The component that displays the information about an assignment */\nfunction Assignment(props) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\tconst { assignmentId } = useParams();\n\n\t/* Used to update the assignment page after a file upload */\n\tconst [shouldUpdate, setShouldUpdate] = useState(0);\n\n\t/* Used to get infomation about the assignment */\n\tconst [assignment, setAssignment] = useState(null);\n\tuseEffect(() => {\n\t\tconst fetchAssignment = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/assignments/${assignmentId}`, {\n\t\t\t\theaders: { 'Authorization': bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetAssignment(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchAssignment();\n\t}, [shouldUpdate, teacherId, course.id]);\n\n\t/* used to get the assignment files */\n\tconst [assignmentFiles, setAssignmentFiles] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchFiles = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/assignments/${assignmentId}/files`, {\n\t\t\t\theaders: { \"Authorization\": bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetAssignmentFiles(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchFiles();\n\t}, [shouldUpdate]);\n\n\t/* This function makes the assignment page update */\n\tconst update = () => setShouldUpdate(shouldUpdate + 1);\n\n\treturn (\n\t\t<div className=\"assignment\">\n\t\t\t<h2>{assignment ? assignment.title : \"title\"}</h2>\n\t\t\t<p>{assignment ? assignment.description : \"description\"}</p>\n\t\t\t<div className=\"files\">\n\t\t\t\t<div className=\"file-list\">\n\t\t\t\t\t<h4>Assignment files</h4>\n\t\t\t\t\t<FileForm\n\t\t\t\t\t\tupdateCallback={update}\n\t\t\t\t\t\tcourseInstanceId={course.id}\n\t\t\t\t\t\tassignmentId={assignmentId}\n\t\t\t\t\t\tclassInstanceId={course.classInstanceID} />\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{assignmentFiles.map(file => <AssignmentFileItem updateList={update} file={file} />)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"student-files\">\n\t\t\t\t\t<h4>Student files</h4>\n\t\t\t\t\t<StudentList courseId={course.id} teacherId={teacherId} assignmentId={assignmentId} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/* Displays a single assignment file */\nconst AssignmentFileItem = ({ file, updateList }) => {\n\tconst stripedFilename = file.filename.replace(/-\\d{7,}/, \"\");;\n\tconst courseId = file.courseInstanceID;\n\tconst teacherId = useContext(TeacherContext);\n\n\tconst deleteFile = (event) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${courseId}/files/${file.id}`, {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tupdateList();\n\t\t\t}).catch(err => console.log(err));\n\t}\n\tconst downloadFile = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.open(\n\t\t\t`${apiLink}/teachers/${teacherId}/courses/${courseId}/files/${file.filename}`,\n\t\t\t'_blank');\n\t}\n\treturn (\n\t\t<li id={file.id}>\n\t\t\t<p>{stripedFilename}</p>\n\t\t\t<div className=\"actions\">\n\t\t\t\t<i className=\"material-icons\" onClick={downloadFile}>download</i>\n\t\t\t\t<i className=\"material-icons\" onClick={deleteFile}>delete</i>\n\t\t\t</div>\n\t\t</li>\n\t);\n}\n\n/* Displays the list of students that have uploaded a file */\nfunction StudentList(props) {\n\tconst courseId = props.courseId;\n\tconst teacherId = props.teacherId;\n\tconst assignmentId = props.assignmentId;\n\n\tconst [students, setStudents] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchStudents = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${courseId}/assignments/${assignmentId}/studentfiles`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetStudents(organizeStudents(res.result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchStudents();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"student-files\">\n\t\t\t{students.map(student => <Student key={student.id} student={student} />)}\n\t\t</div>\n\t);\n}\n\n/* Displays a single student and his files */\nfunction Student({ student }) {\n\tconst firstname = student.firstname;\n\tconst lastname = student.lastname;\n\tconst files = student.files;\n\n\tconst [filesShown, setFilesShown] = useState(false);\n\treturn (\n\t\t<div className=\"student\">\n\t\t\t<div className=\"head\" onClick={() => setFilesShown(!filesShown)}>\n\t\t\t\t<h4>{firstname + \" \" + lastname}</h4>\n\t\t\t\t<i className=\"material-icons\">unfold_more</i>\n\t\t\t</div>\n\t\t\t<div className=\"body\">\n\t\t\t\t<div className={\"file-list \" + (filesShown ? \"shown\" : \"hidden\")}>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{files.map(file => <StudentFileItem key={file.id} file={file} />)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/* Displays a single file in the list */\nfunction StudentFileItem({ file }) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst stripedFilename = file.filename.replace(/-\\d{7,}/, \"\");;\n\tconst assignmentId = file.assignmentID;\n\tconst studentId = file.studentID;\n\n\tconst courseId = file.courseInstanceID;\n\n\tconst downloadFile = (event) => {\n\t\tevent.preventDefault();\n\t\twindow.open(\n\t\t\t`${apiLink}/teachers/${teacherId}/courses/${courseId}/assignments/${assignmentId}/studentfiles/${studentId}/${file.filename}`,\n\t\t\t'_blank');\n\t}\n\treturn (\n\t\t<li id={file.id}>\n\t\t\t<p className=\"filename\">{stripedFilename}</p>\n\t\t\t<p className=\"datetime\">{file.posted_on}</p>\n\t\t\t<i className=\"material-icons\" onClick={downloadFile}>download</i>\n\t\t</li>\n\t);\n}\n\n/* Handles uploading a file */\nfunction FileForm(props) {\n\tconst teacherId = useContext(TeacherContext);\n\n\tconst assignmentId = props.assignmentId;\n\tconst courseId = props.courseInstanceId;\n\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\tconst form = event.target;\n\t\tconst formData = new FormData(form);\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${courseId}/assignments/${assignmentId}/files`, {\n\t\t\tmethod: 'post',\n\t\t\tbody: formData,\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer,\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tprops.updateCallback();\n\t\t\t})\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\treturn (\n\t\t<div className=\"file-form\">\n\t\t\t<form\n\t\t\t\tonSubmit={onSubmit}\n\t\t\t\tmethod=\"post\"\n\t\t\t\tencType=\"multipart/form-data\">\n\n\t\t\t\t<input name=\"assignmentID\" value={assignmentId} hidden={true} type=\"text\" readOnly={true} />\n\t\t\t\t<input name=\"file\" type=\"file\" />\n\t\t\t\t<input type=\"submit\" />\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport { AssignmentList, Assignment };\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useHistory, useRouteMatch, Link } from 'react-router-dom';\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport { CourseContext } from \"./Course\";\n\nfunction Attendance(props) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\tconst { url } = useRouteMatch();\n\n\tconst [sessions, setSessions] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchSessions = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/attendance`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetSessions(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchSessions();\n\t}, [teacherId, course.id]);\n\n\treturn (\n\t\t<div className=\"sessions\">\n\t\t\t<Link to={`${url}/add`}>Add Session</Link>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Week</th>\n\t\t\t\t\t\t<th>Topic</th>\n\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t<th>Date</th>\n\t\t\t\t\t\t<th>Hours</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{sessions.map(session => <SessionRow key={session.id} session={session} />)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nfunction SessionRow(props) {\n\tconst history = useHistory();\n\tconst session = props.session;\n\tfunction onClick() {\n\t\thistory.push(`attendance/${session.id}`);\n\t}\n\treturn (\n\t\t<tr>\n\t\t\t<td>{session.week}</td>\n\t\t\t<td>{session.topic}</td>\n\t\t\t<td>{session.type}</td>\n\t\t\t<td>{session.date}</td>\n\t\t\t<td>{session.total}</td>\n\t\t\t<td><button onClick={onClick}>VIEW</button></td>\n\t\t</tr>\n\t)\n}\n\n\nexport default Attendance;\n","import { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport { CourseContext } from \"./Course\";\n\nconst Session = (props) => {\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\tconst { sessionId } = useParams();\n\tconst [students, setStudents] = useState([]);\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst fetchStudents = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\n\t\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/attendance/${sessionId}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetStudents(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchStudents();\n\t}, []);\n\n\tconst deleteSession = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = 'Bearer ' + token;\n\n\t\tfetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/attendance/${sessionId}`, {\n\t\t\tmethod: 'delete',\n\t\t\theaders: {\n\t\t\t\t'Authorization': bearer\n\t\t\t}\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\thistory.goBack();\n\t\t\t}).catch(_ => console.log(_));\n\n\t}\n\n\treturn (\n\t\t<div className=\"session\">\n\t\t\t<button className=\"delete\" onClick={deleteSession}>Delete this session</button>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Firstname</th>\n\t\t\t\t\t\t<th>Lastname</th>\n\t\t\t\t\t\t<th>Attended</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{students.map(student => <StudentRow key={student.id} student={student} />)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nfunction StudentRow(props) {\n\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\n\tconst { sessionId } = useParams();\n\n\tconst [student, setStudent] = useState(props.student);\n\n\tconst incButton = async () => {\n\t\tif (student.attended == student.total) {\n\t\t\talert(\"Error\", \"You cannot increase any more!\", \"error\");\n\t\t\treturn;\n\t\t}\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = 'Bearer ' + token;\n\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/attendance/${sessionId}/${student.id}`, {\n\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify({ length: student.attended + 1 })\n\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tsetStudent({ ...student, attended: student.attended + 1 });\n\t\t\t});\n\t}\n\n\tconst decButton = async () => {\n\t\tif (student.attended == 0) {\n\t\t\talert(\"Error\", \"You cannot decrease any more!\", \"error\");\n\t\t\treturn;\n\t\t}\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = 'Bearer ' + token;\n\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/attendance/${sessionId}/${student.id}`, {\n\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify({ length: student.attended - 1 })\n\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\talert(\"Success!\", res.message, \"success\");\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t\tsetStudent({ ...student, attended: student.attended - 1 });\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<tr>\n\t\t\t<td>{student.firstname}</td>\n\t\t\t<td>{student.lastname}</td>\n\t\t\t<td>{student.attended + \" / \" + student.total}</td>\n\t\t\t<td>\n\t\t\t\t<button onClick={decButton}><i className=\"material-icons\">remove</i></button>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<button onClick={incButton}><i className=\"material-icons\">add</i></button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n}\n\nexport default Session;\n","import { useState, useEffect, useContext } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport { CourseContext } from \"./Course\";\n\n/* Checks whether a string can be converted to an integer */\nconst isNumeric = (string) => {\n\treturn /^-?\\d+$/.test(string) || string === \"\";\n}\n\nfunction NewSession(props) {\n\n\tconst course = useContext(CourseContext);\n\tconst teacherId = useContext(TeacherContext);\n\tconst history = useHistory();\n\n\t/* Gets the list of students for a course */\n\tconst [students, setStudents] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchStudents = async () => {\n\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/students`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tconst students = res.result;\n\t\t\t\t\t\t/* Set the list of students to the recieved one */\n\t\t\t\t\t\tsetStudents(students);\n\n\t\t\t\t\t\t/* Create an initial array that represents how many hours \n\t\t\t\t\t\t * each student attended */\n\t\t\t\t\t\tconst array = [];\n\t\t\t\t\t\tfor (let i = 0; i < students.length; i++) {\n\t\t\t\t\t\t\tarray[i] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetAttendedList(array);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchStudents();\n\n\t}, []);\n\n\t/* This state holds session information, which will be manipulated by the\n\t * teacher */\n\tconst [session, setSession] = useState({\n\t\tweek: 0,\n\t\ttopic: \"\",\n\t\ttype: \"lecture\",\n\t\tlength: 1,\n\t\tdate: \"\"\n\t});\n\n\tconst [attendedList, setAttendedList] = useState([]);\n\n\t/* Handles the changes in the input fields */\n\tconst handleChange = (event) => {\n\n\t\tevent.preventDefault();\n\t\t/* target holds the field information, like it's value\n\t\t * and it's name, from which we distinguish which field it is\n\t\t * */\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\n\t\tif (name === \"length\") {\n\n\t\t\tif (!isNumeric(target.value)) {\n\t\t\t\talert(\"Error\", \"It should be a number\", \"error\");\n\t\t\t\treturn;\n\t\t\t} else if (parseInt(target.value) > 10) {\n\t\t\t\talert(\"Error\", \"To big of a length\", \"error\");\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tconst array = [];\n\t\t\t\tfor (let i = 0; i < students.length; i++) {\n\t\t\t\t\tarray.push(parseInt(target.value));\n\t\t\t\t}\n\n\t\t\t\tsetAttendedList(array);\n\t\t\t}\n\n\t\t}\n\t\t/* This updates only the `name` field of the session */\n\t\tsetSession({ ...session, [name]: target.value });\n\t}\n\n\t/* handles submitting the session information */\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\tif (session.topic === \"\" ||\n\t\t\tsession.date === \"\" ||\n\t\t\tsession.type === \"\" ||\n\t\t\tsession.week <= 0 ||\n\t\t\tsession.length <= 0 ||\n\t\t\tsession.length > 10) {\n\n\t\t\talert(\"Error\", \"Your input is wrong\", \"error\");\n\t\t\treturn;\n\t\t}\n\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = 'Bearer ' + token;\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/attendance`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(session)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t// we now use the insertId returned by our request to\n\t\t\t\t\t// insert the students into that session\n\t\t\t\t\tsubmitStudents(res.result.insertId);\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t/* Handles submitting the student information to the api */\n\tconst submitStudents = async (sessionId) => {\n\n\t\tconst body = students.map((student, key) => {\n\t\t\treturn ({ id: student.id, length: attendedList[key] });\n\t\t});\n\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = 'Bearer ' + token;\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/attendance/${sessionId}`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(body)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst result = res.result;\n\t\t\t\t\tif (result.affectedRows === students.length) {\n\t\t\t\t\t\talert(\"Success!\", \"The session was successfully added\", \"success\");\n\t\t\t\t\t\thistory.push(`/t/${teacherId}/courses/${course.id}/attendance`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\t/* generates a function for manipulating the correct element in the\n\t * attended list */\n\tconst functionGenerator = (key) => {\n\n\t\tconst changeStudentAttended = (delta) => {\n\n\t\t\tconst newArray = [...attendedList];\n\t\t\tconst newValue = attendedList[key] + delta;\n\n\t\t\tif (newValue > session.length || newValue < 0) {\n\t\t\t\talert(\"Error\", \"Number not allowed\", \"error\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tnewArray[key] = newValue;\n\n\t\t\tsetAttendedList(newArray);\n\t\t}\n\n\t\treturn changeStudentAttended;\n\t}\n\n\treturn (\n\t\t<div className=\"add-session\">\n\t\t\t<label>\n\t\t\t\tWeek:\n\t\t\t\t<input name=\"week\" placeholder=\"week\" type=\"number\" onChange={handleChange} value={session.week} />\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tTopic:\n\t\t\t\t<input name=\"topic\" placeholder=\"topic\" onChange={handleChange} value={session.topic} />\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tType:\n\t\t\t\t<select name=\"type\" placeholder=\"Type\" onChange={handleChange} value={session.type}>\n\t\t\t\t\t<option value=\"lecture\">Lecture</option>\n\t\t\t\t\t<option value=\"seminar\">Seminar</option>\n\t\t\t\t</select>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tLength:\n\t\t\t\t<input name=\"length\" type=\"number\" placeholder=\"length\" onChange={handleChange} value={session.length} />\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tDate:\n\t\t\t\t<input name=\"date\" placeholder=\"week\" type=\"date\" onChange={handleChange} value={session.date} />\n\t\t\t</label>\n\t\t\t<button onClick={onSubmit}>Submit</button>\n\t\t\t<div className=\"horizontal-divider\"></div>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Id</th>\n\t\t\t\t\t\t<th>Firstname</th>\n\t\t\t\t\t\t<th>Lastname</th>\n\t\t\t\t\t\t<th>Attended</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{students.map((student, key) => <StudentRow key={key} student={student} length={attendedList[key]} callback={functionGenerator(key)} />)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\n/* Displays a table row that holds information about a student */\nfunction StudentRow(props) {\n\tconst student = props.student;\n\tconst callback = props.callback;\n\n\treturn (\n\t\t<tr>\n\t\t\t<td>{student.id}</td>\n\t\t\t<td>{student.firstname}</td>\n\t\t\t<td>{student.lastname}</td>\n\t\t\t<td>{typeof props.length !== \"NaN\" ? props.length : \"Invalid\"}</td>\n\t\t\t<td>\n\t\t\t\t<button onClick={() => callback(-1)}><i className=\"material-icons\">remove</i></button>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<button onClick={() => callback(1)}><i className=\"material-icons\">add</i></button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n}\n\nexport default NewSession;\n","import { Link, useRouteMatch, useHistory } from 'react-router-dom';\nimport { useState, useEffect, useContext } from 'react';\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport { CourseContext } from \"./Course\";\nimport { organizeGrades } from \"../../Utils\";\n\nfunction StudentList(props) {\n  const course = useContext(CourseContext);\n  const teacherId = useContext(TeacherContext);\n  const { url } = useRouteMatch();\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n\n    const getCourseGrades = async () => {\n      const token = sessionStorage.getItem(\"jwt\");\n      const bearer = 'Bearer ' + token;\n      await fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/grades`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            const students = organizeGrades(res.result);\n            const elements = students.map(student =>\n              <Grades name={student.firstname + \" \" + student.lastname} grades={student.grades} key={student.id} />\n            );\n            setStudents(elements);\n          } else {\n            alert(\"Error\", res.message, \"error\");\n          }\n        }).catch(_ => console.log(_));\n    }\n\n    getCourseGrades();\n\n  }, []);\n\n  return (\n    <div className=\"student-list\">\n      <div className=\"action-buttons\">\n        <Link to={`${url}/add`}>Add Grades</Link>\n        <Link to={`${url}/addsingle`}>Add Single Grade</Link>\n        <Link to={`${url}/delete`}>Delete test grades</Link>\n      </div>\n      {students}\n    </div>\n  );\n}\n\nfunction Grades(props) {\n  const [hidden, setHidden] = useState(false);\n\n  return (\n    <div className=\"grades\">\n      <div className=\"head\" onClick={() => setHidden(!hidden)}>\n        <h4>{props.name}</h4>\n        <i className=\"material-icons\">unfold_more</i>\n      </div>\n      <div className=\"body\">\n        <table className={hidden ? \"hidden\" : \"shown\"}>\n          <thead>\n            <tr>\n              <th>Grade</th>\n              <th>Comment</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.grades.map(grade => GradeRow(grade))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction GradeRow(grade) {\n  const history = useHistory();\n  const { url } = useRouteMatch();\n  const onClick = () => {\n    history.push(`${url}/${grade.id}`, grade);\n  }\n\n  return (\n    <tr key={grade.id} onClick={onClick}>\n      <td>{grade.grade}</td>\n      <td>{grade.comment}</td>\n      <td>{grade.date}</td>\n    </tr>\n  );\n}\n\nexport default StudentList;\n","import { useState, useEffect, useContext } from 'react';\nimport apiLink from \"../../API\";\nimport { useHistory } from 'react-router-dom';\nimport { TeacherContext } from \"../Teacher\";\nimport { CourseContext } from \"./Course\";\n\n/* This component is responsible for handling uploading a bunch of grades for\n * all the students of a course. */\nfunction AddGrades(props) {\n\tconst course = useContext(CourseContext);\n\tconst teacherId = useContext(TeacherContext);\n\tconst history = useHistory();\n\n\tconst [students, setStudents] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchStudents = async () => {\n\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/students`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetStudents(res.result);\n\n\t\t\t\t\t\t// also populate the list of grades with a default value\n\t\t\t\t\t\tconst array = [];\n\t\t\t\t\t\tfor (let i = 0; i < res.result.length; i++) {\n\t\t\t\t\t\t\tarray.push(4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetGrades(array);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchStudents();\n\n\t}, [teacherId, course.id]);\n\n\t// session will hold the common values for all the grades\n\tconst [session, setSession] = useState({\n\t\tcomment: \"\",\n\t\tdate: \"\"\n\t});\n\n\t// will hold the grades for each student\n\tconst [grades, setGrades] = useState([]);\n\n\t// handles <input> element changes\n\tconst handleChange = (event) => {\n\t\tconst target = event.target;\n\t\tconst name = target.name;\n\n\t\tsetSession({ ...session, [name]: target.value });\n\t\tevent.preventDefault();\n\t}\n\n\t// submits the information into the api\n\tconst onSubmit = async () => {\n\t\tif (session.comment === \"\" || session.date === \"\") {\n\t\t\talert(\"Error\", \"Grade comment is empty!\", \"error\");\n\t\t\treturn;\n\t\t}\n\t\t/* Creates an array where each element an object with a student id and\n\t\t * a grade, this array is created from two existing arrays:\n\t\t *      1. The students array from which we map\n\t\t *      2. The grades array where grades[i] belongs to students[i]\n\t\t *          \n\t\t * */\n\t\tconst studentGradeList = students.map((student, key) => {\n\t\t\treturn { id: student.id, grade: grades[key] };\n\t\t});\n\t\t/* Creates the body of the post request */\n\t\tconst body = {\n\t\t\tcomment: session.comment,\n\t\t\tdate: session.date,\n\t\t\tstudents: studentGradeList\n\t\t};\n\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/grades`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(body)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\tconst result = res.result;\n\t\t\t\t\tif (result.affectedRows === students.length) {\n\t\t\t\t\t\talert(\"Success!\", \"Grades were added successfully\", \"success\");\n\t\t\t\t\t\thistory.push(`/t/${teacherId}/courses/${course.id}/grades`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\t// creates a different callback function for each student row\n\t// to modify it's own grade via the two buttons provided \n\tconst functionGenerator = (key) => {\n\n\t\tconst callback = (delta) => {\n\n\t\t\tconst newArray = [...grades];\n\t\t\tnewArray[key] += delta;\n\n\t\t\t/* Check if the new value conforms to the rules */\n\t\t\tif (newArray[key] > 10 || newArray[key] < 4) {\n\t\t\t\talert(\"Error\", \"Not allowed!\", \"error\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetGrades(newArray)\n\t\t}\n\t\treturn callback;\n\t}\n\n\treturn (\n\t\t<div className=\"add-grades\">\n\t\t\t<label>\n\t\t\t\tComment:\n\t\t\t\t<input name=\"comment\" type=\"text\" value={session.comment} onChange={handleChange} />\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tDate:\n\t\t\t\t<input name=\"date\" type=\"date\" value={session.date} onChange={handleChange} />\n\t\t\t</label>\n\t\t\t<button onClick={onSubmit}>Submit</button>\n\t\t\t<div className=\"horizontal-divider\"></div>\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Id</th>\n\t\t\t\t\t\t<th>Firstname</th>\n\t\t\t\t\t\t<th>Lastname</th>\n\t\t\t\t\t\t<th>Grade</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{students.map((student, key) => <StudentRow key={key} student={student} grade={grades[key]} callback={functionGenerator(key)} />)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n\n}\n\n/* Just displays a single row tha contains information about a student */\nconst StudentRow = (props) => {\n\tconst student = props.student;\n\tconst callback = props.callback;\n\treturn (\n\t\t<tr>\n\t\t\t<td>{student.id}</td>\n\t\t\t<td>{student.firstname}</td>\n\t\t\t<td>{student.lastname}</td>\n\t\t\t<td>{props.grade}</td>\n\t\t\t<td>\n\t\t\t\t<button onClick={() => callback(-1)}><i className=\"material-icons\">remove</i></button>\n\t\t\t</td>\n\t\t\t<td>\n\t\t\t\t<button onClick={() => callback(1)}><i className=\"material-icons\">add</i></button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n}\n\n/* This component is responsible for handling uploading a single student grade */\nfunction AddSingleGrade(props) {\n\t/* Use the defined contexts */\n\tconst history = useHistory();\n\tconst teacherId = useContext(TeacherContext);\n\tconst course = useContext(CourseContext);\n\n\t/* Will hold the controlled form information */\n\tconst [form, setForm] = useState({\n\t\tcomment: \"\",\n\t\tdate: \"\",\n\t\tstudentId: -1,\n\t\tgrade: 4\n\t});\n\n\t/* This state holds the students of the course */\n\tconst [students, setStudents] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchStudents = async () => {\n\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/students`, {\n\t\t\t\theaders: { 'Authorization': bearer }\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetStudents(res.result);\n\t\t\t\t\t\tif (res.result.length > 0) {\n\t\t\t\t\t\t\tsetForm({ ...form, 'studentId': res.result[0].id });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchStudents();\n\t}, []);\n\n\t/* Handles input changes and validates them */\n\tconst handleChange = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst name = event.target.name;\n\t\tconst value = event.target.value;\n\n\t\tif (name === \"grade\") {\n\t\t\tif (value > 10 || value < 4) {\n\t\t\t\talert(\"Error\", \"Grade cannot be bigger than 10 or smaller than 4!\", \"error\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tsetForm({ ...form, [name]: value });\n\t}\n\n\t/* Handles submitting the form in the api */\n\tconst onSubmit = async (event) => {\n\t\tevent.preventDefault();\n\t\t/* input validation */\n\t\tif (form.date === \"\" || form.comment === \"\") {\n\t\t\talert(\"Error\", \"Either no comment or the date is not set!\", \"error\");\n\t\t\treturn;\n\t\t}\n\n\t\t/* Create the body of the request */\n\t\tconst body = {\n\t\t\tcomment: form.comment,\n\t\t\tdate: form.date,\n\t\t\tstudents: [{ id: form.studentId, grade: form.grade }]\n\t\t};\n\n\t\t/* Make the request */\n\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\tconst bearer = \"Bearer \" + token;\n\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/grades`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t'Authorization': bearer\n\t\t\t},\n\t\t\tbody: JSON.stringify(body)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => {\n\t\t\t\tif (res.status === \"OK\") {\n          alert(\"Success!\", res.message, \"success\");\n\t\t\t\t\thistory.push(`/t/${teacherId}/courses/${course.id}/grades`);\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\n\treturn (\n\t\t<div className=\"add-grades\">\n\t\t\t<label>\n\t\t\t\tComment:\n\t\t\t\t<input onChange={handleChange} value={form.comment} name=\"comment\" type=\"text\" />\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tDate:\n\t\t\t\t<input onChange={handleChange} value={form.date} name=\"date\" type=\"date\" />\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tSelect the student:\n\t\t\t\t<select onChange={handleChange} value={form.studentId} name=\"studentId\">\n\t\t\t\t\t{students.map(student => <option\n\t\t\t\t\t\tkey={student.id}\n\t\t\t\t\t\tvalue={student.id}\n\t\t\t\t\t>\n\t\t\t\t\t\t{`${student.firstname} ${student.lastname}`}\n\t\t\t\t\t</option>)}\n\t\t\t\t</select>\n\t\t\t</label>\n\t\t\t<label>\n\t\t\t\tSelect the grade:\n\t\t\t\t<input onChange={handleChange} value={form.grade} name=\"grade\" type=\"number\" step=\"1\" min={4} max={10} />\n\t\t\t</label>\n\t\t\t<button onClick={onSubmit}>Submit</button>\n\t\t</div>\n\t);\n}\n\nexport default AddGrades;\nexport { AddSingleGrade };\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport apiLink from '../../API';\nimport { TeacherContext } from '../Teacher';\nimport { CourseContext } from './Course';\n\ninterface Grade {\n  id: number\n  grade: number\n  comment: string\n  date: string\n}\n\n/* Handles modifying an existing grade */\nconst ModifyGrade = () => {\n  /* Get the teacher and course data to perform the api requests */\n  const teacherId = useContext(TeacherContext);\n  const course = useContext(CourseContext) as any;\n\n  /* Get the history object to retrieve the passed state */\n  const history = useHistory();\n\n  /* Create the grade state */\n  const [grade, setGrade] = useState<Grade>({\n    id: 0,\n    grade: 0,\n    comment: \"\",\n    date: \"\"\n  });\n  /* Update the grade state in a useEffect with the passed state, do it only once */\n  useEffect(() => {\n    setGrade(history.location.state as Grade);\n  }, []);\n\n  /* Handles the changes in the input fields */\n  const onChange = (event: React.ChangeEvent) => {\n    event.preventDefault();\n    const name = (event.target as any).name;\n    const value = (event.target as any).value;\n\n    setGrade({ ...grade, [name]: value });\n  }\n\n  /* Handles submitting the new grade to the api */\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    /* Get the bearer token */\n    const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n    /* Perform the api request with the correct options */\n    fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/grades/${grade.id}`, {\n      method: 'put',\n      headers: {\n        'Authorization': bearer,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(grade)\n    })\n      .then(res => res.json())\n      .then(res => {\n        if(res.status === \"OK\") {\n          (alert as any)(\"Success!\", res.message, \"success\");\n        } else {\n          (alert as any)(\"Error!\", res.message, \"error\");\n        }\n        history.goBack();\n      }).catch(err => console.log(err));\n  }\n\n  /* Handles deleting a grade */\n  const deleteGrade = (event: React.FormEvent) => {\n    event.preventDefault();\n    /* Get the bearer token */\n    const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n    /* Perform the api request with the correct options */\n    fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/grades/${grade.id}`, {\n      method: 'delete',\n      headers: {\n        'Authorization': bearer,\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if(res.status === \"OK\") {\n          (alert as any)(\"Success!\", res.message, \"success\");\n        } else {\n          (alert as any)(\"Error\", res.message, \"error\");\n        }\n        history.goBack();\n      }).catch(err => console.log(err));\n  }\n\n  return (\n    <div className=\"update-grade\">\n      <form onSubmit={onSubmit}>\n        <label>\n          Grade:\n          <input name=\"grade\" type=\"number\" value={grade.grade} min=\"4\" max=\"10\" onChange={onChange} />\n        </label>\n        <label>\n          Comment:\n          <input name=\"comment\" type=\"text\" value={grade.comment} onChange={onChange} />\n        </label>\n        <label>\n          Date:\n          <input name=\"date\" type=\"date\" value={grade.date} onChange={onChange} />\n        </label>\n        <button>Update</button>\n        <button className=\"delete\" onClick={deleteGrade}>Delete</button>\n      </form>\n    </div>\n  );\n}\n\n/* Handles deleting the grades of a test */\nconst DeleteGrade = () => {\n  /* Get the teacher and course context to perform the requests */\n  const teacherId = useContext(TeacherContext);\n  const course = useContext(CourseContext) as any;\n\n  /* Get the history object, it is used to perform redirection */\n  const history = useHistory();\n\n  const [date, setDate] = useState<string>(\"\");\n  const onChange = (event: React.ChangeEvent) => {\n    event.preventDefault();\n\n    setDate((event.target as any).value);\n  }\n\n  /* Perform the api request with the correct options */\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n    fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/grades`, {\n      method: 'delete',\n      headers: {\n        'Authorization': bearer,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ date: date, classInstanceID: course.classInstanceID })\n    })\n      .then(res => res.json())\n      .then(res => {\n        (alert as any)(\"Error\", res.message, \"error\");\n        history.goBack();\n      }).catch(err => console.log(err));\n  }\n\n  return (\n    <div className=\"update-grade\">\n      <h3>Choose the date of the exam :</h3>\n      <form onSubmit={onSubmit}>\n        <label>\n          Date:\n          <input name=\"date\" type=\"date\" value={date} onChange={onChange} />\n        </label>\n        <button>Delete</button>\n      </form>\n    </div>\n  );\n}\n\nexport { ModifyGrade, DeleteGrade };\n","import React, { useState, useEffect, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport apiLink from '../../API';\nimport { TeacherContext } from '../Teacher';\nimport { CourseContext } from './Course';\n\ninterface Student {\n  id: number\n  firstname: string\n  lastname: string\n}\n\ninterface StudentRowProps {\n  student: Student\n  courseInstanceId: number\n  month: number\n  year: number\n}\n\ninterface RegisterCell {\n  id: number,\n  mark: string,\n  comment: string,\n  date: string,\n  studentID: number,\n  courseInstanceID: number\n}\n\nconst months = [\n  {\n    name: \"January\",\n    length: 31\n  },\n  {\n    name: \"February\",\n    length: 29\n  },\n  {\n    name: \"March\",\n    length: 31\n  },\n  {\n    name: \"April\",\n    length: 30\n  },\n  {\n    name: \"May\",\n    length: 31\n  },\n  {\n    name: \"June\",\n    length: 30\n  },\n  {\n    name: \"July\",\n    length: 31\n  },\n  {\n    name: \"August\",\n    length: 31\n  },\n  {\n    name: \"September\",\n    length: 30\n  },\n  {\n    name: \"October\",\n    length: 31\n  },\n  {\n    name: \"November\",\n    length: 30\n  },\n  {\n    name: \"December\",\n    length: 31\n  },\n];\n\nconst Register = () => {\n  /* Determines the month that we are viewing */\n  const [date, setDate] = useState({\n    month: 1,\n    year: 2021\n  });\n\n  /* used to get the students of this class */\n  const teacherId = useContext(TeacherContext);\n  const course = useContext(CourseContext);\n  const courseInstanceId = (course as any).id;\n\n  /* Holds the students of this class */\n  const [students, setStudents] = useState<Student[]>([]);\n  useEffect(() => {\n    const fetchStudents = async () => {\n      const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n      await fetch(`${apiLink}/teachers/${teacherId}/courses/${courseInstanceId}/students`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setStudents(res.result);\n          } else {\n            (alert as any)(\"Error\", res.message, \"error\");\n          }\n        }).catch(_ => alert(\"Something went wrong\"));\n    }\n    fetchStudents();\n  }, [teacherId]);\n\n  /* Method for going into the next month */\n  const next = () => {\n    if (date.month === 12) {\n      setDate({\n        month: 1,\n        year: date.year + 1\n      });\n    } else {\n      setDate({\n        month: date.month + 1,\n        year: date.year\n      });\n    }\n  }\n  /* Method for going into the previous month */\n  const prev = () => {\n    if (date.month === 1) {\n      setDate({\n        month: 12,\n        year: date.year - 1\n      });\n    } else {\n      setDate({\n        month: date.month - 1,\n        year: date.year\n      });\n    }\n  }\n\n  return (\n    <div className=\"register\">\n\n      <div className=\"header\">\n        <button onClick={prev}><i className=\"material-icons\">arrow_back_ios</i></button>\n        <h2>{`${months[date.month - 1].name} - ${date.year}`}</h2>\n        <button onClick={next}><i className=\"material-icons\">arrow_forward_ios</i></button>\n      </div>\n\n      <Days month={date.month} />\n\n      <div>\n        {students.map(student =>\n          <StudentRow key={student.id}\n            student={student}\n            month={date.month}\n            year={date.year}\n            courseInstanceId={courseInstanceId} />)}\n      </div>\n\n      <div id=\"popup-container\">\n      </div>\n    </div>\n  );\n}\n\n/* Prints a horizontal line of days of the month */\nconst Days = (props: { month: number }) => {\n  /* Create a list of days with the length of the specified month */\n  let days = [];\n  for (let i = 0; i < months[props.month - 1].length; i++) {\n    days.push(i + 1);\n  }\n  return (\n    <div className=\"student-row\">\n      <p>Days</p>\n      {days.map(day => (\n        <div className=\"element\">\n          <p>{day.toString()}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\n/* Displays a single student */\nconst StudentRow = (props: StudentRowProps) => {\n  const teacherId = useContext(TeacherContext);\n  const courseInstanceId = props.courseInstanceId;\n\n  /* Create a list of empty days, that hold no grade */\n  let emptyDays: RegisterCell[] = [];\n  for (let i = 0; i < months[props.month - 1].length; i++) {\n    emptyDays.push({\n      id: 0,\n      mark: \"\",\n      comment: \"\",\n      date: `${props.year}-${props.month}-${i + 1}`,\n      studentID: props.student.id,\n      courseInstanceID: courseInstanceId\n    });\n  }\n\n  /* Get the marks for this single user */\n  const [days, setDays] = useState<RegisterCell[]>([]);\n  useEffect(() => {\n\n    setDays(emptyDays);\n\n    const fetchGrades = async () => {\n      const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\n      const query = `month=${props.month}&year=${props.year}&courseInstanceID=${courseInstanceId}`;\n\n      await fetch(`${apiLink}/teachers/${teacherId}/students/${props.student.id}/marks?${query}`, {\n        headers: {\n          'Authorization': bearer,\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            const newDays = [...emptyDays];\n            for (let i = 0; i < res.result.length; i++) {\n              /* The result[i].date is the date of the current grade\n               * in format (2021-01-24),\n               * to determine it's correct position in the array we\n               * need to know the day, we split the string and\n               * access the correct element.*/\n              const day = parseInt(res.result[i].date.split(\"-\")[2]);\n              newDays[day - 1] = res.result[i];\n            }\n            setDays(newDays);\n          } else {\n            (alert as any)(\"Error\", res.message, \"error\");\n          }\n        }).catch(err => console.log(err.message));\n    }\n    fetchGrades();\n  }, [teacherId, props.month, props.year]);\n\n  return (\n    <div className=\"student-row\">\n      <p><b>{`${props.student.firstname} ${props.student.lastname}`}</b></p>\n      {days.map((day, index) => <Cell key={index} cell={day} teacherId={teacherId} />)}\n    </div>\n  );\n}\n\n/* Displays one register cell */\nconst Cell = (props: { cell: RegisterCell, teacherId: number }) => {\n  /* Will hold the mark and comment, we need this state */\n  const [cell, setCell] = useState({\n    id: 0,\n    mark: \"\",\n    comment: \"\"\n  });\n  useEffect(() => {\n    setCell(props.cell);\n  }, [props.cell]);\n\n  const updateMark = (id: number, mark: string, comment: string) => {\n    setCell({\n      id: id,\n      mark: mark,\n      comment: comment\n    });\n  }\n\n  const onClick = () => {\n    /* We do this atrocity because when the popup shows, we have to make\n     * sure it displays the newly updated mark and comment, that is if this\n     * mark was updated. If we don't do this, event though the mark is\n     * updated in the database and the state of this component it will not\n     * appear updated in popup because the old props.cell is passed. */\n    const updatedCell = { ...props.cell, id: cell.id, mark: cell.mark, comment: cell.comment };\n\n    const popUpContainer = document.getElementById(\"popup-container\");\n    ReactDOM.render(\n      <ModifyCell cell={updatedCell} teacherId={props.teacherId} updateMark={updateMark} />,\n      popUpContainer);\n  }\n\n  return (\n    <div className=\"element\">\n      <p onClick={onClick}>{cell.mark}</p>\n    </div>\n  );\n}\n\n/* I have to pass the teacherId like this because useContext hook won't work for\n * some fucking reason. It just holds the default value for TeacherContext */\nconst ModifyCell = (props: {\n  cell: RegisterCell,\n  teacherId: number,\n  updateMark: (id: number, mark: string, comment: string) => void\n}) => {\n  const [form, setForm] = useState(props.cell);\n\n  const closePopup = (event: React.FormEvent) => {\n    event.preventDefault();\n    const popUpContainer = document.getElementById(\"popup-container\");\n    ReactDOM.unmountComponentAtNode(popUpContainer!!);\n  }\n\n  const onChange = (event: React.ChangeEvent) => {\n    event.preventDefault();\n    const name = (event.target as any).name;\n    const value = (event.target as any).value;\n\n    setForm({ ...form, [name]: value });\n  }\n\n  const onSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    /* If the id of the cell is 0, then make a post request to create a new\n     * one, else modify the old one */\n    let body: any;\n    let url: string = \"\";\n    let method: string = \"\";\n    const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n    if (form.id === 0) {\n      /* Create a new register cell */\n      body = {\n        mark: form.mark,\n        comment: form.comment,\n        date: form.date,\n        studentID: form.studentID,\n        courseInstanceID: form.courseInstanceID\n      }\n      url = `${apiLink}/teachers/${props.teacherId}/students/${form.studentID}/marks`;\n      method = 'post';\n    } else {\n      /* Modify the existing one */\n      body = {\n        mark: form.mark,\n        comment: form.comment,\n      }\n      url = `${apiLink}/teachers/${props.teacherId}/students/${form.studentID}/marks/${props.cell.id}`;\n      method = 'put';\n    }\n\n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': bearer,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.status === \"OK\") {\n          (alert as any)(\"Success\", \"Mark added successfully!\", \"success\");\n\n          /* Previously the id could have been 0, if it was that means\n           * that we perform a post request and created a new mark.\n           * Now that a new mark is created, we also need to update\n           * the id in the table cell to represent the newly\n           * created mark. This expression checks that:\n           */\n          const id = form.id === 0 ? res.result.insertId : form.id;\n          props.updateMark(id, form.mark, form.comment);\n\n          /* Remove the popup */\n          const popUpContainer = document.getElementById(\"popup-container\");\n          ReactDOM.unmountComponentAtNode(popUpContainer!!);\n        } else {\n          alert(res.message);\n        }\n      }).catch(err => console.log(err));\n  }\n\n  const deleteMark = async (event: any) => {\n    event.preventDefault();\n\n    const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n    await fetch(`${apiLink}/teachers/${props.teacherId}/students/${form.studentID}/marks/${props.cell.id}`, {\n      method: 'delete',\n      headers: {\n        'Authorization': bearer\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.status === \"OK\") {\n          (alert as any)(\"Success\", \"Mark deleted successfully!\", \"success\");\n          /* the 0 id represents an empty cell */\n          props.updateMark(0, \"\", \"\");\n          const popUpContainer = document.getElementById(\"popup-container\");\n          ReactDOM.unmountComponentAtNode(popUpContainer!!);\n        } else {\n          (alert as any)(\"Error\", res.message, \"error\");\n        }\n      }).catch(err => console.log(err));\n  }\n  return (\n    <div className=\"popup\" id=\"popup\">\n      <form onSubmit={onSubmit}>\n        <label>\n          Mark:\n    <input name=\"mark\" onChange={onChange} value={form.mark} />\n        </label>\n        <label>\n          Comment:\n    <input name=\"comment\" onChange={onChange} value={form.comment} />\n        </label>\n        <button>Update</button>\n        <button className=\"danger\" onClick={deleteMark}>Delete</button>\n        <button onClick={closePopup}>Cancel</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link, useParams, useRouteMatch, Route, Switch, Redirect } from 'react-router-dom';\n\nimport PostList from './PostList';\nimport FileList from './FileList';\n\nimport { AssignmentList, Assignment } from './Assignments';\n\nimport Attendance from './Attendance';\nimport Session from './AttendanceSession';\nimport AddSession from './AddSession';\n\nimport Grades from './Grades';\nimport AddGrades, { AddSingleGrade } from './AddGrades';\nimport { ModifyGrade, DeleteGrade } from './UpdateGrades';\n\nimport Register from './Register';\n\nimport { TeacherContext } from \"../Teacher\";\nimport apiLink from \"../../API\";\n\n/* Create and export the course context */\nexport const CourseContext = React.createContext({});\n\nfunction Course(props) {\n  const teacherId = useContext(TeacherContext);\n  const { courseId } = useParams();\n  const { url, path } = useRouteMatch();\n\n  const [course, setCourse] = useState({});\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"jwt\");\n    const bearer = \"Bearer \" + token;\n    const fetchCourse = async () => {\n      await fetch(`${apiLink}/teachers/${teacherId}/courses/${courseId}`, {\n        headers: { 'Authorization': bearer }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setCourse(res.result);\n          } else {\n            alert(\"Error\", res.message, \"error\");\n          }\n        }).catch(_ => console.log(_));\n    }\n    fetchCourse();\n  }, [teacherId, courseId]);\n\n  return (\n    <CourseContext.Provider value={course}>\n      <div className=\"course\">\n\n        <NavBar courseId={courseId} teacherId={teacherId} />\n        <div className=\"course-tab\">\n\n          <Switch>\n\n            <Route exact path={`${path}/`}>\n              <Redirect to={`${url}/posts`} />\n            </Route>\n\n            <Route exact path={`${path}/posts`}>\n              <PostList />\n            </Route>\n\n            {/*Assignments routes*/}\n            <Route exact path={`${path}/assignments`}>\n              <AssignmentList />\n            </Route>\n            <Route exact path={`${path}/assignments/:assignmentId`}>\n              <Assignment />\n            </Route>\n\n            {/*General course files route*/}\n            <Route exact path={`${path}/files`}>\n              <FileList />\n            </Route>\n\n            {/*Attendance routes*/}\n            <Route exact path={`${path}/attendance`} >\n              <Attendance />\n            </Route>\n            <Route exact path={`${path}/attendance/add`} >\n              <AddSession />\n            </Route>\n            <Route path={`${path}/attendance/:sessionId`} >\n              <Session />\n            </Route>\n\n            <Route exact path={`${path}/register`} >\n              <Register />\n            </Route>\n\n            {/* The grade routes*/}\n            <Route exact path={`${path}/grades`} >\n              <Grades />\n            </Route>\n            <Route exact path={`${path}/grades/add`} >\n              <AddGrades />\n            </Route>\n            <Route exact path={`${path}/grades/addsingle`} >\n              <AddSingleGrade />\n            </Route>\n            <Route exact path={`${path}/grades/delete`} >\n              <DeleteGrade />\n            </Route>\n            <Route exact path={`${path}/grades/:gradeId`} >\n              <ModifyGrade />\n            </Route>\n\n          </Switch>\n        </div>\n      </div>\n    </CourseContext.Provider>\n  );\n}\n\nfunction NavBar(props) {\n  const course = useContext(CourseContext);\n\n  const { url } = useRouteMatch();\n\n  const [onFocus, setFocus] = useState(\"posts\");\n\n  return (\n    <div className=\"navbar\">\n      <h1>{course.name}</h1>\n      <ul>\n        <li className={onFocus === \"posts\" ? \"active\" : \"\"}>\n          <Link\n            to={`${url}/posts`}\n            onClick={() => setFocus(\"posts\")}\n          >Posts</Link>\n        </li>\n        <li className={onFocus === \"assignments\" ? \"active\" : \"\"}>\n          <Link\n            to={`${url}/assignments`}\n            onClick={() => setFocus(\"assignments\")}\n          >Assignments</Link>\n        </li>\n        <li className={onFocus === \"files\" ? \"active\" : \"\"}>\n          <Link\n            to={`${url}/files`}\n            onClick={() => setFocus(\"files\")}\n          >Files</Link>\n        </li>\n        <li className={onFocus === \"attendance\" ? \"active\" : \"\"}>\n          <Link\n            to={`${url}/attendance`}\n            onClick={() => setFocus(\"attendance\")}\n          >Attendance</Link>\n        </li>\n        <li className={onFocus === \"grades\" ? \"active\" : \"\"}>\n          <Link\n            to={`${url}/grades`}\n            onClick={() => setFocus(\"grades\")}\n          >Grades</Link>\n        </li>\n        <li className={onFocus === \"register\" ? \"active\" : \"\"}>\n          <Link\n            to={`${url}/register`}\n            onClick={() => setFocus(\"register\")}\n          >Register</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Course;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Course from './Course';\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport { getColorForCourse } from '../../Utils';\n\n\nfunction Courses(_props) {\n\tlet { path } = useRouteMatch();\n\n\treturn (\n\t\t<div className=\"courses-page\">\n\t\t\t<header><h2>Courses</h2></header>\n\t\t\t<section>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={`${path}/`} >\n\t\t\t\t\t\t<CourseList />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={`${path}/:courseId`}>\n\t\t\t\t\t\t<Course />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n\nfunction CourseList(_props) {\n\tconst teacherId = useContext(TeacherContext);\n\tconst [courses, setCourses] = useState([]);\n\tuseEffect(() => {\n\n\t\tconst fetchCourses = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetCourses(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\t\tfetchCourses();\n\n\t}, []);\n\treturn (\n\t\t<div className=\"courses-list\">\n\t\t\t<table>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>COURSE</th>\n\t\t\t\t\t\t<th>CATEGORY</th>\n\t\t\t\t\t\t<th>HOURS PER WEEK</th>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{courses.map(x => <CourseListItem key={x.id} course={x} />)}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nconst CourseListItem = (props) => {\n\tconst { url } = useRouteMatch();\n\tconst teacherId = useContext(TeacherContext);\n\n\tconst [hoursPerWeek, setHoursPerWeek] = useState(0);\n\tuseEffect(() => {\n\t\tconst fetchInfo = async () => {\n\t\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${props.course.id}/hours`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetHoursPerWeek(res.result);\n\t\t\t\t\t} else {\n            alert(\"Error!\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(err => console.log(err));\n\t\t}\n\n\t\tfetchInfo();\n\t}, [teacherId]);\n\n\treturn (\n\t\t<tr>\n\t\t\t<td className=\"color\">\n        <div style={{backgroundColor: getColorForCourse(props.course.id)}}></div>\n      </td>\n\t\t\t<td className=\"name\">{props.course.name}</td>\n\t\t\t<td className=\"category\">{props.course.category}</td>\n\t\t\t<td className=\"hours\">{hoursPerWeek}</td>\n\t\t\t<td><Link to={`${url}/${props.course.id}`}>View</Link></td>\n\t\t</tr>\n\t);\n}\n\nexport default Courses;\n","import { useState, useEffect, useContext } from 'react';\nimport { useParams, Link, Switch, useRouteMatch, Route } from 'react-router-dom';\nimport apiLink from \"../API\";\nimport { TeacherContext } from \"./Teacher\";\nimport { organizeGrades } from '../Utils';\nimport { getColorForCourse } from '../Utils';\n\nfunction Class(_props) {\n  const { path } = useRouteMatch();\n  return (\n    <div className=\"class\">\n      <header><h2>My Class</h2></header>\n      <section>\n        <Switch>\n          <Route exact path={`${path}/`}>\n            <CourseList />\n          </Route>\n          <Route exact path={`${path}/:courseId/grades`}>\n            <StudentList />\n          </Route>\n        </Switch>\n      </section>\n    </div>\n  );\n}\n\nfunction CourseList(_props) {\n  const teacherId = useContext(TeacherContext);\n\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    const fetchCourses = async () => {\n      const token = sessionStorage.getItem(\"jwt\");\n      const bearer = 'Bearer ' + token;\n      await fetch(`${apiLink}/teachers/${teacherId}/class`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            setCourses(res.result);\n          } else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n          }\n        }).catch(_ => console.log(_));\n    }\n    fetchCourses();\n  }, [teacherId]);\n  return (\n    <div className=\"courses-list\">\n      <table>\n        <thead>\n          <tr>\n\t\t\t\t\t\t<th></th>\n            <th>COURSE</th>\n            <th>CATEGORY</th>\n            <th>HOURS PER WEEK</th>\n            <th>TEACHER</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {courses.map(x => <CourseListItem key={x.id} course={x} />)}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction CourseListItem({ course }) {\n  let { url } = useRouteMatch();\n\tconst teacherId = useContext(TeacherContext);\n\n\tconst [hoursPerWeek, setHoursPerWeek] = useState(0);\n\tuseEffect(() => {\n\t\tconst fetchInfo = async () => {\n\t\t\tconst bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/courses/${course.id}/hours`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif(res.status === \"OK\") {\n\t\t\t\t\t\tsetHoursPerWeek(res.result);\n\t\t\t\t\t} else {\n            alert(\"Error!\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(err => console.log(err));\n\t\t}\n\n\t\tfetchInfo();\n\t}, [teacherId]);\n  return (\n\t\t<tr>\n\t\t\t<td className=\"color\">\n        <div style={{backgroundColor: getColorForCourse(course.id)}}></div>\n      </td>\n\t\t\t<td className=\"name\">{course.name}</td>\n\t\t\t<td className=\"category\">{course.category}</td>\n\t\t\t<td className=\"hours\">{hoursPerWeek}</td>\n\t\t\t<td className=\"teacher\">{course.firstname + \" \" + course.lastname}</td>\n\t\t\t<td><Link to={`${url}/${course.id}/grades`}>View</Link></td>\n\t\t</tr>\n  );\n}\n\nfunction StudentList(_props) {\n\n  const teacherId = useContext(TeacherContext);\n\n  const { courseId } = useParams();\n\n  const [students, setStudents] = useState([]);\n  useEffect(() => {\n    const fetchCourseGrades = async () => {\n      const token = sessionStorage.getItem(\"jwt\");\n      const bearer = 'Bearer ' + token;\n      await fetch(`${apiLink}/teachers/${teacherId}/courses/${courseId}/grades`, {\n        headers: {\n          'Authorization': bearer\n        }\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.status === \"OK\") {\n            const students = organizeGrades(res.result);\n            const elements = students.map(student => (\n              <Grades name={student.firstname} grades={student.grades} key={student.id} />\n            ));\n            setStudents(elements);\n          } else {\n\t\t\t\t\t\talert(\"Error\", res.message, \"error\");\n          }\n        }).catch(_ => console.log(_));\n    }\n\n    fetchCourseGrades();\n\n  }, [teacherId, courseId]);\n\n  return (\n    <div className=\"student-list\">\n      <h2>Student grades</h2>\n      {students}\n    </div>\n  );\n}\n\nfunction Grades(props) {\n  const [hidden, setHidden] = useState(true);\n\n  return (\n    <div className=\"grades\">\n      <div className=\"head\" onClick={() => setHidden(!hidden)}>\n        <h4>{props.name}</h4>\n        <i className=\"material-icons\">unfold_more</i>\n      </div>\n      <div className=\"body\">\n        <table className={hidden ? \"hidden\" : \"shown\"}>\n          <thead>\n            <tr>\n              <th>Grade</th>\n              <th>Comment</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {props.grades.map(grade => GradeRow(grade))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction GradeRow(grade) {\n  return (\n    <tr key={grade.id}>\n      <td>{grade.grade}</td>\n      <td>{grade.comment}</td>\n      <td>{grade.date}</td>\n    </tr>\n  );\n}\n\nexport default Class;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport { getColorForCourse } from '../../Utils';\n\ntype Event = {\n\tid: number;\n\ttitle: string;\n\tdescription: string;\n\tdue: string;\n\tclassInstanceID: number | null\n}\n\nconst months = [\n\t\"Jan\", \"Feb\", \"Mar\", \"Apr\",\n\t\"May\", \"Jun\", \"Jul\", \"Aug\",\n\t\"Sep\", \"Oct\", \"Nov\", \"Dec\"\n];\n\n/* this component is responsible for displaying the school events */\nfunction Events(_props: any) {\n\tconst teacherId = useContext(TeacherContext);\n\n\t/* Fetch the events from the api */\n\tconst [events, setEvents] = useState<Event[]>([]);\n\tuseEffect(() => {\n\t\tconst fetchEvents = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = \"Bearer \" + token;\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/events`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\tsetEvents(res.result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(alert as any)(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchEvents();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"events\">\n\t\t\t<div className=\"head\">\n\t\t\t\t<h3>Upcoming Events</h3>\n\t\t\t</div>\n\t\t\t<div className=\"events__list\">\n\t\t\t\t{events.map(event => <Event key={event.id} event={event} />)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n/* displays a single event */\nfunction Event(props: { event: Event }) {\n\tconst e = props.event;\n\tconst date = new Date(e.due);\n\n\t/* Get the name of the month of the date */\n\tconst month = months[date.getMonth()];\n\n\t/* Get the day and a 0 in front to make all the days contain two digits */\n\tconst day = date.getDay() < 10 ? '0' + date.getDay() : date.getDay();\n\n\t/* Get a color for the color of the border\n\t*  And then dynamically set the border color of the date */\n\tconst color = getColorForCourse(props.event.id);\n\tconst style = {\n\t\tborder: `2px solid ${color}`,\n\t\tborderRadius: '10px 0 0 10px'\n\t};\n\treturn (\n\t\t<div className=\"event\">\n\t\t\t<div style={style} className=\"event__date\">\n\t\t\t\t<p className=\"event__date__day\"><b>{day}</b></p>\n\t\t\t\t<p className=\"event__date__month\">{month}</p>\n\t\t\t</div>\n\t\t\t<div className=\"event__description\">\n\t\t\t\t<h4>{e.title}</h4>\n\t\t\t\t<p>{e.classInstanceID ? \"Class\" : \"School\"}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Events;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport apiLink from \"../../API\";\nimport { TeacherContext } from \"../Teacher\";\nimport Events from \"./Events\";\n\n/* This component displays the whole home page */\nfunction Home(_props) {\n  const teacherId = useContext(TeacherContext);\n  /* This state is used to information about the teacher */\n  const [teacher, setTeacher] = useState(null);\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"jwt\");\n    const bearer = \"Bearer \" + token;\n    fetch(`${apiLink}/teachers/${teacherId}`, {\n      headers: {\n        'Authorization': bearer\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.status === \"OK\") {\n          setTeacher(res.result);\n        } else {\n          alert(\"Error\", res.message, \"error\");\n        }\n      }).catch(_ => console.log(_));\n  }, [teacherId]);\n\n  return (\n    <div className=\"home\">\n      <header>\n        <h2>Home</h2>\n      </header>\n      <section>\n        <div className=\"dashboard\">\n          <Events />\n          <div className=\"personal\">\n            <ProfileInfo teacher={teacher} />\n            <ProfilePictureForm />\n          </div>\n        </div>\n      </section>\n    </div>\n\n  );\n}\n\n/* Displays profile information about the teacher */\nfunction ProfileInfo(props) {\n  const teacher = props.teacher ? props.teacher : {};\n  const history = useHistory();\n  return (\n    <div className=\"profile\">\n      <div className=\"head\">\n        <h3>Profile information</h3>\n        <button onClick={() => history.push('home/profile')}>Update</button>\n      </div>\n      <div className=\"labels\">\n        <p>Name: </p>\n        <p>Surname: </p>\n        <p>Email: </p>\n        <p>Address: </p>\n        <p>Number: </p>\n      </div>\n      <div className=\"values\">\n        <p>{teacher.firstname}</p>\n        <p>{teacher.lastname}</p>\n        <p>{teacher.email}</p>\n        <p>{teacher.address}</p>\n        <p>{teacher.phone}</p>\n      </div>\n    </div>\n  );\n}\n\n/* Updates the profile picture */\nconst ProfilePictureForm = () => {\n  const teacherId = useContext(TeacherContext);\n\n  const uploadImage = async (event) => {\n    event.preventDefault();\n    const bearer = \"Bearer \" + sessionStorage.getItem(\"jwt\");\n    const form = event.target;\n    const formData = new FormData(form);\n    await fetch(`${apiLink}/teachers/${teacherId}/picture`, {\n      method: 'post',\n      headers: {\n        'Authorization': bearer\n      },\n      body: formData\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.status === \"OK\") {\n          alert(\"Success!\", res.message, \"success\");\n        } else {\n          alert(\"Error\", res.message, \"error\");\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div>\n      <h3>Update the profile picture</h3>\n      <form onSubmit={uploadImage}>\n        <input type=\"file\" name=\"file\" />\n        <input type=\"submit\" value=\"Update\" />\n      </form>\n    </div>\n  );\n}\n\nexport default Home;\n","import { useContext, useState, useEffect } from 'react';\nimport { TeacherContext } from '../Teacher';\nimport { validateEmail, validateNameString, validatePhone } from '../../Utils';\nimport apiLink from '../../API';\n\n/* Controlled component for updating info about the teacher */\nfunction Profile(props) {\n  const teacherId = useContext(TeacherContext);\n\n  /* This state will hold info about the form entered so far\n   * We use the useEffect hook to connect to the database and get the\n   * current info about the teacher, then the teacher can modify them\n   * */\n  const [teacher, setTeacher] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    address: \"\",\n    phone: \"\"\n  });\n  useEffect(() => {\n    const fetchteacher = async () => {\n      const token = sessionStorage.getItem(\"jwt\");\n      const bearer = \"Bearer \" + token;\n      await fetch(`${apiLink}/teachers/${teacherId}`, {\n        headers: { 'Authorization': bearer }\n      })\n        .then(res => res.json())\n        .then(res => res.status === \"OK\" ? res.result : {})\n        .then(teacher => setTeacher(teacher))\n        .catch(err => console.log(err));\n    }\n    fetchteacher();\n  }, [teacherId]);\n\n  /* This function is used for handling form changes */\n  const handleChange = (event) => {\n    event.preventDefault();\n\n    const target = event.target;\n    /* The name of the input field that has changed */\n    const name = target.name;\n    /* The changed value of the input field */\n    const value = target.value;\n\n    if (name === \"firstname\" || name === \"lastname\") {\n      if (!validateNameString(value)) {\n        alert(\"Error\", `The firstname and lastname fields should only containt letters, and be no longer than 30 characters`, \"error\");\n        return;\n      }\n    }\n\n    /* Update the state if all the validations were successful */\n    setTeacher({ ...teacher, [name]: value });\n  }\n\n  /* This functions submits the information to the api and handles the\n   * response */\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    /* Check the integrity of email and phone number fields */\n    if (!validateEmail(teacher.email)) {\n      alert(\"Error\", \"Invalid email\", \"error\");\n      return;\n    } else if (!validatePhone(teacher.phone)) {\n      alert(\"Error\", \"Invalid phone number\", \"error\");\n      return;\n    }\n\n    const token = sessionStorage.getItem(\"jwt\");\n    const bearer = \"Bearer \" + token;\n    await fetch(`${apiLink}/teachers/${teacherId}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': bearer\n      },\n      body: JSON.stringify(teacher)\n    })\n      .then(res => res.json())\n      .then(res => res.status === \"OK\" ? res.result : null)\n      .then(result => {\n        if (result) {\n          result.affectedRows === 1\n            ? alert(\"Success\", \"teacher updated successfully\", \"success\")\n            : alert(\"Error\", \"Something went wrong, pleasy try again\", \"error\");\n        } else throw new Error(\"teacher could not update due to an internal error\");\n      }).catch(err => console.log(err.message));\n  }\n\n\n  return (\n    <div className=\"user-form\">\n      <header>\n        <h2>Your Information</h2>\n      </header>\n      <section>\n          <h2>Update profile info</h2>\n          <form className=\"teacher-form\" onSubmit={onSubmit}>\n            <label>\n              Firstname:\n\t\t\t\t\t<input onChange={handleChange} name=\"firstname\" value={teacher.firstname} />\n            </label>\n            <label>\n              Lastname:\n\t\t\t\t\t<input onChange={handleChange} name=\"lastname\" value={teacher.lastname} />\n            </label>\n            <label>\n              Email:\n\t\t\t\t\t<input type=\"email\" onChange={handleChange} name=\"email\" value={teacher.email} />\n            </label>\n            <label>\n              Address:\n\t\t\t\t\t<input onChange={handleChange} name=\"address\" value={teacher.address} />\n            </label>\n            <label>\n              Phone number:\n\t\t\t\t\t<input onChange={handleChange} name=\"phone\" value={teacher.phone} />\n            </label>\n            <button>Update</button>\n          </form>\n      </section>\n    </div>\n  );\n}\n\nexport default Profile;\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport apiLink from '../../API';\nimport { TeacherContext } from '../Teacher';\nimport { organizeSchedule } from '../../Utils';\nimport Schedule, { Day, Hour } from '../../shared/Schedule';\n\n/* TODO: This ugliness needs heavy refactoring */\nconst defaultDays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\nconst fillMissingDays = (organizedSchedule: Day[]) => {\n\tlet missingDays: (string|null)[] = [...defaultDays];\n\torganizedSchedule.forEach(day => {\n\t\tmissingDays[day.day] = null;\n\t});\n\tmissingDays.forEach((day, index) => {\n\t\tif(day) {\n\t\t\torganizedSchedule.push({id: 0, name: day, hours: [], day: index+1});\n\t\t}\n\t});\n}\n\nconst ScheduleDataProvider = () => {\n\tconst teacherId = useContext(TeacherContext);\n\t/* This state and useEffect are used to get the list of days, along with\n\t * their specific day hours for this schedule */\n\tconst [days, setDays] = useState<Day[]>([]);\n\tuseEffect(() => {\n\t\tconst fetchDays = async () => {\n\t\t\tconst token = sessionStorage.getItem(\"jwt\");\n\t\t\tconst bearer = 'Bearer ' + token;\n\t\t\tawait fetch(`${apiLink}/teachers/${teacherId}/schedule`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'Authorization': bearer\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => {\n\t\t\t\t\tif (res.status === \"OK\") {\n\t\t\t\t\t\t/* From the api we get a list of hours, each hour has it's own day\n\t\t\t\t\t\t * information, we use the function organizeSchedule to organize\n\t\t\t\t\t\t * the hours into a list of days, each day with an array of hours */\n\t\t\t\t\t\tconst organized_days = organizeSchedule(res.result) as any;\n\t\t\t\t\t\tsetDays(organized_days);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(alert as any)(\"Error\", res.message, \"error\");\n\t\t\t\t\t}\n\t\t\t\t}).catch(_ => console.log(_));\n\t\t}\n\n\t\tfetchDays();\n\t}, [teacherId]);\n\treturn (\n\t\t<>\n\t\t\t<Schedule days={days} />\n\t\t</>\n\t);\n}\n\nexport default ScheduleDataProvider;\n","import React from 'react';\nimport { Redirect, Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport Courses from './courses/Courses';\nimport Class from './Class';\nimport Home from './home/Home';\nimport Profile from './home/Profile';\nimport Schedule from './schedule/Schedule';\n\nexport const TeacherContext = React.createContext(0);\n\nfunction Teacher() {\n  let { id } = useParams();\n  let match = useRouteMatch();\n  return (\n    <TeacherContext.Provider value={id}>\n      <div className=\"TeacherPage\">\n        <NavBar />\n        <main>\n          <Switch>\n\n            <Route exact path={`${match.path}/`}>\n              <Redirect to={`${match.url}/home`} />\n            </Route>\n\n            <Route exact path={`${match.path}/home`}>\n              <Home teacherId={id} />\n            </Route>\n\n            <Route exact path={`${match.path}/home/profile`}>\n              <Profile />\n            </Route>\n\n            <Route path={`${match.path}/class`}>\n              <Class />\n            </Route>\n\n            <Route path={`${match.path}/courses`}>\n              <Courses />\n            </Route>\n\n            <Route path={`${match.path}/schedule`}>\n              <Schedule />\n            </Route>\n\n          </Switch>\n        </main>\n      </div>\n    </TeacherContext.Provider>\n  );\n}\n\nexport default Teacher;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './login/Login';\nimport './styles/App.scss';\nimport Student from './student/Student';\nimport Teacher from './teacher/Teacher';\n\n/* Set the alert function to execute a sweet alert */\nimport swal from 'sweetalert';\nif (document.getElementById) {\n  window.alert = (title, text, type) => {\n    swal({ title: title, text: text, icon: type });\n  };\n}\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Login />\n          </Route>\n\n          <Route path=\"/s/:id\">\n            <Student />\n          </Route>\n\n          <Route path=\"/t/:id\">\n            <Teacher />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}